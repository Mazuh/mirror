{"version":3,"sources":["../package.json","../node_modules/@mediapipe/selfie_segmentation/selfie_segmentation.js","advanced/background-blur.ts","advanced/background-replacement.ts","../node_modules/@mediapipe/face_detection/face_detection.js","../node_modules/@mediapipe/drawing_utils/drawing_utils.js","advanced/face-detection.ts","../node_modules/webrtc-adapter/src/js/utils.js","../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../node_modules/sdp/sdp.js","../node_modules/webrtc-adapter/src/js/common_shim.js","../node_modules/webrtc-adapter/src/js/adapter_factory.js","../node_modules/webrtc-adapter/src/js/adapter_core.js","webrtc.ts","ui.ts","main.ts","index.js"],"names":["module","exports","name","version","description","main","scripts","start","build","deploy","test","repository","type","url","keywords","author","license","bugs","homepage","devDependencies","prettier","typescript","dependencies","resolutions","private","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","compactObject","deprecated","detectBrowser","disableLog","disableWarnings","extractVersion","filterStats","log","walkStats","wrapPeerConnectionEvent","logDisabled_","deprecationWarnings_","uastring","expr","pos","match","length","parseInt","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","set","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","size","keys","bool","Error","console","oldMethod","newMethod","warn","result","browser","navigator","mozGetUserMedia","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","supportsUnifiedPlan","RTCRtpTransceiver","isObject","val","toString","call","data","reduce","accumulator","isObj","isEmptyObject","undefined","assign","stats","base","resultSet","id","forEach","endsWith","track","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","push","trackStat","trackId","shimGetUserMedia","utils","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","default","cache","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","logging","browserDetails","mediaDevices","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","slice","oc","mix","advanced","concat","shimConstraints_","constraints","func","JSON","parse","stringify","audio","remap","a","b","video","face","facingMode","matches","getSupportedFacingModeLies","getSupportedConstraints","enumerateDevices","then","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","fixNegotiationNeeded","shimAddTrackRemoveTrack","shimAddTrackRemoveTrackWithNative","_getdisplaymedia","shimGetSendersWithDtmf","shimGetStats","_getusermedia","shimMediaStream","shimOnTrack","shimPeerConnection","shimSenderReceiverGetStats","MediaStream","webkitMediaStream","transceiver","receiver","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_this","_ontrackpoly","te","getReceivers","event","Event","streams","dispatchEvent","shimSenderWithDtmf","pc","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","_this2","origRemoveStream","removeStream","_this3","s","RTCRtpSender","origGetSenders","_this4","senders","origGetStats","getStats","_this5","selector","onSucc","onErr","fixChromeStats_","response","standardReport","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","map","resolve","RTCRtpReceiver","_this6","origGetReceivers","_this7","receivers","srcElement","MediaStreamTrack","err","getLocalStreams","_this8","_shimmedLocalStreams","streamId","_this9","existingSenders","newSenders","newSender","_this10","origGetLocalStreams","_this11","nativeStreams","_reverseStreams","_this12","_streams","newStream","_this13","signalingState","t","oldStream","method","nativeMethod","methodObj","_this14","args","replaceInternalStreamId","origSetLocalDescription","setLocalDescription","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","origLocalDescription","_this15","streamid","RTCIceCandidate","target","getConfiguration","sdpSemantics","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","code","mediaSource","shimAddTransceiver","shimCreateAnswer","shimCreateOffer","shimGetParameters","shimRTCDataChannel","shimReceiverGetStats","shimRemoveStream","shimSenderGetStats","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Array","from","iter","isArray","len","i","arr2","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","DataChannel","RTCDataChannel","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","rid","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","params","getParameters","encodings","setParameters","catch","origGetParameters","origCreateOffer","createOffer","_arguments","all","finally","origCreateAnswer","createAnswer","_arguments2","shimAudioContext","shimCallbacksAPI","shimConstraints","shimCreateOfferLegacy","shimLocalStreamsAPI","shimRTCIceServerUrls","shimRemoteStreamsAPI","shimTrackEventTransceiver","_localStreams","_addTrack","_len","_key","index","tracks","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","candidate","_getUserMedia","errcb","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","generateCertificate","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","AudioContext","webkitAudioContext","removeExtmapAllowMixed","shimAddIceCandidateNullOrEmpty","shimConnectionState","shimMaxMessageSize","shimParameterlessSetLocalDescription","shimRTCIceCandidate","shimRTCIceCandidateRelayProtocol","shimSendThrowTypeError","_sdp","_interopRequireDefault","NativeRTCIceCandidate","substring","nativeCandidate","parsedCandidate","SDPUtils","parseCandidate","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","usernameFragment","relayProtocol","priority","_sctp","sections","splitSections","shift","mediaSection","mLine","parseMLine","protocol","sctpInDescription","maxMessageSize","isFirefox","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","remoteMMS","matchPrefix","getMaxMessageSize","Number","POSITIVE_INFINITY","Math","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","send","byteLength","readyState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","nativeSRD","split","line","trim","join","nativeAddIceCandidate","nativeSetLocalDescription","chromeShim","firefoxShim","safariShim","commonShim","adapterFactory","shimChrome","shimFirefox","shimSafari","adapter","browserShim","_adapter_factory","_default"],"mappings":"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A,SAAA,KAAA,MAAA,CAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,CAAA,GAAA,SAAA,GAAA,GAAA,GAAA,KAAA,KAAA,GAAA,SAAA,KAAA,MAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,CAAA,CAAA,GAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,GAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,GAAA,CAAA,EAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,GAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,MAAA,GAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IACA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,MAAA,GAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAA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","file":"src.20a710a6.js","sourceRoot":"../src","sourcesContent":["module.exports={name:\"mirror\",version:\"1.0.0\",description:\"Simple test for your camera and microphone devices, just like a mirror.\",main:\"src/index.html\",scripts:{start:\"parcel src/index.html --open\",build:\"parcel build src/index.html --no-cache\",\"clear-dist\":\"rm -rf docs/ && rm -rf dist/ && rm -rf .cache/\",deploy:\"./deploy.sh\",test:\"echo 'No tests' && exit 1\"},repository:{type:\"git\",url:\"git+https://github.com/Mazuh/mirror.git\"},keywords:[\"webrtc\",\"audio\",\"video\",\"test\"],author:\"Mazuh\",license:\"GPL-3.0\",bugs:{url:\"https://github.com/Mazuh/mirror/issues\"},homepage:\"https://github.com/Mazuh/mirror#readme\",devDependencies:{\"@babel/core\":\"^7.18.6\",prettier:\"^2.7.1\",typescript:\"^4.9.5\"},dependencies:{\"@mediapipe/drawing_utils\":\"^0.3.1675466124\",\"@mediapipe/face_detection\":\"^0.4.1646425229\",\"@mediapipe/selfie_segmentation\":\"^0.1.1675465747\",\"parcel-bundler\":\"^1.8.1\",\"webrtc-adapter\":\"^8.2.1\"},resolutions:{\"@babel/preset-env\":\"7.13.8\"},private:!0};","(function(){/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n'use strict';var x;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};\nfunction ca(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error(\"Cannot find global object\");}var y=ca(this);function z(a,b){if(b)a:{var c=y;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}\nz(\"Symbol\",function(a){function b(g){if(this instanceof b)throw new TypeError(\"Symbol is not a constructor\");return new c(d+(g||\"\")+\"_\"+e++,g)}function c(g,f){this.h=g;ba(this,\"description\",{configurable:!0,writable:!0,value:f})}if(a)return a;c.prototype.toString=function(){return this.h};var d=\"jscomp_symbol_\"+(1E9*Math.random()>>>0)+\"_\",e=0;return b});\nz(\"Symbol.iterator\",function(a){if(a)return a;a=Symbol(\"Symbol.iterator\");for(var b=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),c=0;c<b.length;c++){var d=y[b[c]];\"function\"===typeof d&&\"function\"!=typeof d.prototype[a]&&ba(d.prototype,a,{configurable:!0,writable:!0,value:function(){return da(aa(this))}})}return a});function da(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}\nfunction A(a){var b=\"undefined\"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}function ea(a){if(!(a instanceof Array)){a=A(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var fa=\"function\"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};z(\"Object.assign\",function(a){return a||fa});\nvar ha=\"function\"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ia;if(\"function\"==typeof Object.setPrototypeOf)ia=Object.setPrototypeOf;else{var ja;a:{var ka={a:!0},la={};try{la.__proto__=ka;ja=la.a;break a}catch(a){}ja=!1}ia=ja?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+\" is not extensible\");return a}:null}var ma=ia;\nfunction na(a,b){a.prototype=ha(b.prototype);a.prototype.constructor=a;if(ma)ma(a,b);else for(var c in b)if(\"prototype\"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.za=b.prototype}function oa(){this.m=!1;this.j=null;this.i=void 0;this.h=1;this.v=this.s=0;this.l=null}function pa(a){if(a.m)throw new TypeError(\"Generator is already running\");a.m=!0}oa.prototype.u=function(a){this.i=a};\nfunction qa(a,b){a.l={ma:b,na:!0};a.h=a.s||a.v}oa.prototype.return=function(a){this.l={return:a};this.h=this.v};function D(a,b,c){a.h=c;return{value:b}}function ra(a){this.h=new oa;this.i=a}function sa(a,b){pa(a.h);var c=a.h.j;if(c)return ta(a,\"return\"in c?c[\"return\"]:function(d){return{value:d,done:!0}},b,a.h.return);a.h.return(b);return ua(a)}\nfunction ta(a,b,c,d){try{var e=b.call(a.h.j,c);if(!(e instanceof Object))throw new TypeError(\"Iterator result \"+e+\" is not an object\");if(!e.done)return a.h.m=!1,e;var g=e.value}catch(f){return a.h.j=null,qa(a.h,f),ua(a)}a.h.j=null;d.call(a.h,g);return ua(a)}function ua(a){for(;a.h.h;)try{var b=a.i(a.h);if(b)return a.h.m=!1,{value:b.value,done:!1}}catch(c){a.h.i=void 0,qa(a.h,c)}a.h.m=!1;if(a.h.l){b=a.h.l;a.h.l=null;if(b.na)throw b.ma;return{value:b.return,done:!0}}return{value:void 0,done:!0}}\nfunction va(a){this.next=function(b){pa(a.h);a.h.j?b=ta(a,a.h.j.next,b,a.h.u):(a.h.u(b),b=ua(a));return b};this.throw=function(b){pa(a.h);a.h.j?b=ta(a,a.h.j[\"throw\"],b,a.h.u):(qa(a.h,b),b=ua(a));return b};this.return=function(b){return sa(a,b)};this[Symbol.iterator]=function(){return this}}function wa(a){function b(d){return a.next(d)}function c(d){return a.throw(d)}return new Promise(function(d,e){function g(f){f.done?d(f.value):Promise.resolve(f.value).then(b,c).then(g,e)}g(a.next())})}\nfunction E(a){return wa(new va(new ra(a)))}\nz(\"Promise\",function(a){function b(f){this.i=0;this.j=void 0;this.h=[];this.u=!1;var h=this.l();try{f(h.resolve,h.reject)}catch(k){h.reject(k)}}function c(){this.h=null}function d(f){return f instanceof b?f:new b(function(h){h(f)})}if(a)return a;c.prototype.i=function(f){if(null==this.h){this.h=[];var h=this;this.j(function(){h.m()})}this.h.push(f)};var e=y.setTimeout;c.prototype.j=function(f){e(f,0)};c.prototype.m=function(){for(;this.h&&this.h.length;){var f=this.h;this.h=[];for(var h=0;h<f.length;++h){var k=\nf[h];f[h]=null;try{k()}catch(l){this.l(l)}}}this.h=null};c.prototype.l=function(f){this.j(function(){throw f;})};b.prototype.l=function(){function f(l){return function(m){k||(k=!0,l.call(h,m))}}var h=this,k=!1;return{resolve:f(this.I),reject:f(this.m)}};b.prototype.I=function(f){if(f===this)this.m(new TypeError(\"A Promise cannot resolve to itself\"));else if(f instanceof b)this.L(f);else{a:switch(typeof f){case \"object\":var h=null!=f;break a;case \"function\":h=!0;break a;default:h=!1}h?this.F(f):this.s(f)}};\nb.prototype.F=function(f){var h=void 0;try{h=f.then}catch(k){this.m(k);return}\"function\"==typeof h?this.M(h,f):this.s(f)};b.prototype.m=function(f){this.v(2,f)};b.prototype.s=function(f){this.v(1,f)};b.prototype.v=function(f,h){if(0!=this.i)throw Error(\"Cannot settle(\"+f+\", \"+h+\"): Promise already settled in state\"+this.i);this.i=f;this.j=h;2===this.i&&this.K();this.H()};b.prototype.K=function(){var f=this;e(function(){if(f.D()){var h=y.console;\"undefined\"!==typeof h&&h.error(f.j)}},1)};b.prototype.D=\nfunction(){if(this.u)return!1;var f=y.CustomEvent,h=y.Event,k=y.dispatchEvent;if(\"undefined\"===typeof k)return!0;\"function\"===typeof f?f=new f(\"unhandledrejection\",{cancelable:!0}):\"function\"===typeof h?f=new h(\"unhandledrejection\",{cancelable:!0}):(f=y.document.createEvent(\"CustomEvent\"),f.initCustomEvent(\"unhandledrejection\",!1,!0,f));f.promise=this;f.reason=this.j;return k(f)};b.prototype.H=function(){if(null!=this.h){for(var f=0;f<this.h.length;++f)g.i(this.h[f]);this.h=null}};var g=new c;b.prototype.L=\nfunction(f){var h=this.l();f.T(h.resolve,h.reject)};b.prototype.M=function(f,h){var k=this.l();try{f.call(h,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(f,h){function k(p,n){return\"function\"==typeof p?function(q){try{l(p(q))}catch(t){m(t)}}:n}var l,m,r=new b(function(p,n){l=p;m=n});this.T(k(f,l),k(h,m));return r};b.prototype.catch=function(f){return this.then(void 0,f)};b.prototype.T=function(f,h){function k(){switch(l.i){case 1:f(l.j);break;case 2:h(l.j);break;default:throw Error(\"Unexpected state: \"+\nl.i);}}var l=this;null==this.h?g.i(k):this.h.push(k);this.u=!0};b.resolve=d;b.reject=function(f){return new b(function(h,k){k(f)})};b.race=function(f){return new b(function(h,k){for(var l=A(f),m=l.next();!m.done;m=l.next())d(m.value).T(h,k)})};b.all=function(f){var h=A(f),k=h.next();return k.done?d([]):new b(function(l,m){function r(q){return function(t){p[q]=t;n--;0==n&&l(p)}}var p=[],n=0;do p.push(void 0),n++,d(k.value).T(r(p.length-1),m),k=h.next();while(!k.done)})};return b});\nfunction xa(a,b){a instanceof String&&(a+=\"\");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var g=c++;return{value:b(g,a[g]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e}z(\"Array.prototype.keys\",function(a){return a?a:function(){return xa(this,function(b){return b})}});\nz(\"Array.prototype.fill\",function(a){return a?a:function(b,c,d){var e=this.length||0;0>c&&(c=Math.max(0,e+c));if(null==d||d>e)d=e;d=Number(d);0>d&&(d=Math.max(0,e+d));for(c=Number(c||0);c<d;c++)this[c]=b;return this}});function F(a){return a?a:Array.prototype.fill}z(\"Int8Array.prototype.fill\",F);z(\"Uint8Array.prototype.fill\",F);z(\"Uint8ClampedArray.prototype.fill\",F);z(\"Int16Array.prototype.fill\",F);z(\"Uint16Array.prototype.fill\",F);z(\"Int32Array.prototype.fill\",F);\nz(\"Uint32Array.prototype.fill\",F);z(\"Float32Array.prototype.fill\",F);z(\"Float64Array.prototype.fill\",F);z(\"Object.is\",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});z(\"Array.prototype.includes\",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var e=d.length;c=c||0;for(0>c&&(c=Math.max(c+e,0));c<e;c++){var g=d[c];if(g===b||Object.is(g,b))return!0}return!1}});\nz(\"String.prototype.includes\",function(a){return a?a:function(b,c){if(null==this)throw new TypeError(\"The 'this' value for String.prototype.includes must not be null or undefined\");if(b instanceof RegExp)throw new TypeError(\"First argument to String.prototype.includes must not be a regular expression\");return-1!==this.indexOf(b,c||0)}});var ya=this||self;\nfunction Aa(a,b){a=a.split(\".\");var c=ya;a[0]in c||\"undefined\"==typeof c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b};function Ba(a){var b;a:{if(b=ya.navigator)if(b=b.userAgent)break a;b=\"\"}return-1!=b.indexOf(a)};var Ca=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=\"string\"===typeof a?a.split(\"\"):a,g=0;g<c;g++)g in e&&(d[g]=b.call(void 0,e[g],g,a));return d};var Da={},Ea=null;function Fa(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):-1!=\"=.\".indexOf(a[b-1])&&(c=-1!=\"=.\".indexOf(a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;Ga(a,function(g){d[e++]=g});return e!==c?d.subarray(0,e):d}\nfunction Ga(a,b){function c(k){for(;d<a.length;){var l=a.charAt(d++),m=Ea[l];if(null!=m)return m;if(!/^[\\s\\xa0]*$/.test(l))throw Error(\"Unknown base64 encoding at char: \"+l);}return k}Ha();for(var d=0;;){var e=c(-1),g=c(0),f=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|g>>4);64!=f&&(b(g<<4&240|f>>2),64!=h&&b(f<<6&192|h))}}\nfunction Ha(){if(!Ea){Ea={};for(var a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),b=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],c=0;5>c;c++){var d=a.concat(b[c].split(\"\"));Da[c]=d;for(var e=0;e<d.length;e++){var g=d[e];void 0===Ea[g]&&(Ea[g]=e)}}}};var Ia=\"undefined\"!==typeof Uint8Array,Ja=!(Ba(\"Trident\")||Ba(\"MSIE\"))&&\"function\"===typeof ya.btoa;\nfunction Ka(a){if(!Ja){var b;void 0===b&&(b=0);Ha();b=Da[b];for(var c=Array(Math.floor(a.length/3)),d=b[64]||\"\",e=0,g=0;e<a.length-2;e+=3){var f=a[e],h=a[e+1],k=a[e+2],l=b[f>>2];f=b[(f&3)<<4|h>>4];h=b[(h&15)<<2|k>>6];k=b[k&63];c[g++]=l+f+h+k}l=0;k=d;switch(a.length-e){case 2:l=a[e+1],k=b[(l&15)<<2]||d;case 1:a=a[e],c[g]=b[a>>2]+b[(a&3)<<4|l>>4]+k+d}return c.join(\"\")}for(b=\"\";10240<a.length;)b+=String.fromCharCode.apply(null,a.subarray(0,10240)),a=a.subarray(10240);b+=String.fromCharCode.apply(null,\na);return btoa(b)}var La=RegExp(\"[-_.]\",\"g\");function Ma(a){switch(a){case \"-\":return\"+\";case \"_\":return\"/\";case \".\":return\"=\";default:return\"\"}}function Na(a){if(!Ja)return Fa(a);La.test(a)&&(a=a.replace(La,Ma));a=atob(a);for(var b=new Uint8Array(a.length),c=0;c<a.length;c++)b[c]=a.charCodeAt(c);return b}var Oa;function Pa(){return Oa||(Oa=new Uint8Array(0))}var Qa={};var Ra=\"function\"===typeof Uint8Array.prototype.slice,G=0,H=0;function Sa(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/4294967296);b&&(c=A(Ta(c,a)),b=c.next().value,a=c.next().value,c=b);G=c>>>0;H=a>>>0}var Ua=\"function\"===typeof BigInt;function Ta(a,b){b=~b;a?a=~a+1:b+=1;return[a,b]};function Va(a,b){this.i=a>>>0;this.h=b>>>0}\nfunction Wa(a){if(!a)return Xa||(Xa=new Va(0,0));if(!/^-?\\d+$/.test(a))return null;if(16>a.length)Sa(Number(a));else if(Ua)a=BigInt(a),G=Number(a&BigInt(4294967295))>>>0,H=Number(a>>BigInt(32)&BigInt(4294967295));else{var b=+(\"-\"===a[0]);H=G=0;for(var c=a.length,d=b,e=(c-b)%6+b;e<=c;d=e,e+=6)d=Number(a.slice(d,e)),H*=1E6,G=1E6*G+d,4294967296<=G&&(H+=G/4294967296|0,G%=4294967296);b&&(b=A(Ta(G,H)),a=b.next().value,b=b.next().value,G=a,H=b)}return new Va(G,H)}var Xa;function Ya(a,b){return Error(\"Invalid wire type: \"+a+\" (at position \"+b+\")\")}function Za(){return Error(\"Failed to read varint, encoding is invalid.\")}function $a(a,b){return Error(\"Tried to read past the end of the data \"+b+\" > \"+a)};function K(){throw Error(\"Invalid UTF8\");}function ab(a,b){b=String.fromCharCode.apply(null,b);return null==a?b:a+b}var bb=void 0,cb,db=\"undefined\"!==typeof TextDecoder,eb,fb=\"undefined\"!==typeof TextEncoder;var gb;function hb(a){if(a!==Qa)throw Error(\"illegal external caller\");}function ib(a,b){hb(b);this.V=a;if(null!=a&&0===a.length)throw Error(\"ByteString should be constructed with non-empty values\");}function jb(){return gb||(gb=new ib(null,Qa))}function kb(a){hb(Qa);var b=a.V;b=null==b||Ia&&null!=b&&b instanceof Uint8Array?b:\"string\"===typeof b?Na(b):null;return null==b?b:a.V=b};function lb(a){if(\"string\"===typeof a)return{buffer:Na(a),C:!1};if(Array.isArray(a))return{buffer:new Uint8Array(a),C:!1};if(a.constructor===Uint8Array)return{buffer:a,C:!1};if(a.constructor===ArrayBuffer)return{buffer:new Uint8Array(a),C:!1};if(a.constructor===ib)return{buffer:kb(a)||Pa(),C:!0};if(a instanceof Uint8Array)return{buffer:new Uint8Array(a.buffer,a.byteOffset,a.byteLength),C:!1};throw Error(\"Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers\");\n};function mb(a,b){this.i=null;this.m=!1;this.h=this.j=this.l=0;nb(this,a,b)}function nb(a,b,c){c=void 0===c?{}:c;a.S=void 0===c.S?!1:c.S;b&&(b=lb(b),a.i=b.buffer,a.m=b.C,a.l=0,a.j=a.i.length,a.h=a.l)}mb.prototype.reset=function(){this.h=this.l};function L(a,b){a.h=b;if(b>a.j)throw $a(a.j,b);}\nfunction ob(a){var b=a.i,c=a.h,d=b[c++],e=d&127;if(d&128&&(d=b[c++],e|=(d&127)<<7,d&128&&(d=b[c++],e|=(d&127)<<14,d&128&&(d=b[c++],e|=(d&127)<<21,d&128&&(d=b[c++],e|=d<<28,d&128&&b[c++]&128&&b[c++]&128&&b[c++]&128&&b[c++]&128&&b[c++]&128)))))throw Za();L(a,c);return e}function pb(a,b){if(0>b)throw Error(\"Tried to read a negative byte length: \"+b);var c=a.h,d=c+b;if(d>a.j)throw $a(b,a.j-c);a.h=d;return c}var qb=[];function rb(){this.h=[]}rb.prototype.length=function(){return this.h.length};rb.prototype.end=function(){var a=this.h;this.h=[];return a};function sb(a,b,c){for(;0<c||127<b;)a.h.push(b&127|128),b=(b>>>7|c<<25)>>>0,c>>>=7;a.h.push(b)}function M(a,b){for(;127<b;)a.h.push(b&127|128),b>>>=7;a.h.push(b)};function tb(a,b){if(qb.length){var c=qb.pop();nb(c,a,b);a=c}else a=new mb(a,b);this.h=a;this.j=this.h.h;this.i=this.l=-1;this.setOptions(b)}tb.prototype.setOptions=function(a){a=void 0===a?{}:a;this.ca=void 0===a.ca?!1:a.ca};tb.prototype.reset=function(){this.h.reset();this.j=this.h.h;this.i=this.l=-1};\nfunction ub(a){var b=a.h;if(b.h==b.j)return!1;a.j=a.h.h;var c=ob(a.h)>>>0;b=c>>>3;c&=7;if(!(0<=c&&5>=c))throw Ya(c,a.j);if(1>b)throw Error(\"Invalid field number: \"+b+\" (at position \"+a.j+\")\");a.l=b;a.i=c;return!0}\nfunction vb(a){switch(a.i){case 0:if(0!=a.i)vb(a);else a:{a=a.h;for(var b=a.h,c=b+10,d=a.i;b<c;)if(0===(d[b++]&128)){L(a,b);break a}throw Za();}break;case 1:a=a.h;L(a,a.h+8);break;case 2:2!=a.i?vb(a):(b=ob(a.h)>>>0,a=a.h,L(a,a.h+b));break;case 5:a=a.h;L(a,a.h+4);break;case 3:b=a.l;do{if(!ub(a))throw Error(\"Unmatched start-group tag: stream EOF\");if(4==a.i){if(a.l!=b)throw Error(\"Unmatched end-group tag\");break}vb(a)}while(1);break;default:throw Ya(a.i,a.j);}}var wb=[];function xb(){this.j=[];this.i=0;this.h=new rb}function N(a,b){0!==b.length&&(a.j.push(b),a.i+=b.length)}function yb(a,b){if(b=b.R){N(a,a.h.end());for(var c=0;c<b.length;c++)N(a,kb(b[c])||Pa())}};var O=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol()?Symbol():void 0;function P(a,b){if(O)return a[O]|=b;if(void 0!==a.A)return a.A|=b;Object.defineProperties(a,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}});return b}function zb(a,b){O?a[O]&&(a[O]&=~b):void 0!==a.A&&(a.A&=~b)}function Q(a){var b;O?b=a[O]:b=a.A;return null==b?0:b}function R(a,b){O?a[O]=b:void 0!==a.A?a.A=b:Object.defineProperties(a,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}})}\nfunction Ab(a){P(a,1);return a}function Bb(a,b){R(b,(a|0)&-51)}function Cb(a,b){R(b,(a|18)&-41)};var Db={};function Eb(a){return null!==a&&\"object\"===typeof a&&!Array.isArray(a)&&a.constructor===Object}var Fb,Gb=[];R(Gb,23);Fb=Object.freeze(Gb);function Hb(a){if(Q(a.o)&2)throw Error(\"Cannot mutate an immutable Message\");}function Ib(a){var b=a.length;(b=b?a[b-1]:void 0)&&Eb(b)?b.g=1:(b={},a.push((b.g=1,b)))};function Jb(a){var b=a.i+a.G;return a.B||(a.B=a.o[b]={})}function S(a,b){return-1===b?null:b>=a.i?a.B?a.B[b]:void 0:a.o[b+a.G]}function U(a,b,c,d){Hb(a);Kb(a,b,c,d)}function Kb(a,b,c,d){a.j&&(a.j=void 0);b>=a.i||d?Jb(a)[b]=c:(a.o[b+a.G]=c,(a=a.B)&&b in a&&delete a[b])}function Lb(a,b,c,d){var e=S(a,b);Array.isArray(e)||(e=Fb);var g=Q(e);g&1||Ab(e);if(d)g&2||P(e,2),c&1||Object.freeze(e);else{d=!(c&2);var f=g&2;c&1||!f?d&&g&16&&!f&&zb(e,16):(e=Ab(Array.prototype.slice.call(e)),Kb(a,b,e))}return e}\nfunction Mb(a,b){var c=S(a,b);var d=null==c?c:\"number\"===typeof c||\"NaN\"===c||\"Infinity\"===c||\"-Infinity\"===c?Number(c):void 0;null!=d&&d!==c&&Kb(a,b,d);return d}\nfunction Nb(a,b,c,d,e){a.h||(a.h={});var g=a.h[c],f=Lb(a,c,3,e);if(!g){var h=f;g=[];var k=!!(Q(a.o)&16);f=!!(Q(h)&2);var l=h;!e&&f&&(h=Array.prototype.slice.call(h));for(var m=f,r=0;r<h.length;r++){var p=h[r];var n=b,q=!1;q=void 0===q?!1:q;p=Array.isArray(p)?new n(p):q?new n:void 0;if(void 0!==p){n=p.o;var t=q=Q(n);f&&(t|=2);k&&(t|=16);t!=q&&R(n,t);n=t;m=m||!!(2&n);g.push(p)}}a.h[c]=g;k=Q(h);b=k|33;b=m?b&-9:b|8;k!=b&&(m=h,Object.isFrozen(m)&&(m=Array.prototype.slice.call(m)),R(m,b),h=m);l!==h&&Kb(a,\nc,h);(e||d&&f)&&P(g,2);d&&Object.freeze(g);return g}e||(e=Object.isFrozen(g),d&&!e?Object.freeze(g):!d&&e&&(g=Array.prototype.slice.call(g),a.h[c]=g));return g}function Ob(a,b,c){var d=!!(Q(a.o)&2);b=Nb(a,b,c,d,d);a=Lb(a,c,3,d);if(!(d||Q(a)&8)){for(d=0;d<b.length;d++){c=b[d];if(Q(c.o)&2){var e=Pb(c,!1);e.j=c}else e=c;c!==e&&(b[d]=e,a[d]=e.o)}P(a,8)}return b}\nfunction V(a,b,c){if(null!=c&&\"number\"!==typeof c)throw Error(\"Value of float/double field must be a number|null|undefined, found \"+typeof c+\": \"+c);U(a,b,c)}function Qb(a,b,c,d,e){Hb(a);var g=Nb(a,c,b,!1,!1);c=null!=d?d:new c;a=Lb(a,b,2,!1);void 0!=e?(g.splice(e,0,c),a.splice(e,0,c.o)):(g.push(c),a.push(c.o));c.C()&&zb(a,8);return c}function Rb(a,b){return null==a?b:a}function W(a,b,c){c=void 0===c?0:c;return Rb(Mb(a,b),c)};var Sb;function Tb(a){switch(typeof a){case \"number\":return isFinite(a)?a:String(a);case \"object\":if(a)if(Array.isArray(a)){if(0!==(Q(a)&128))return a=Array.prototype.slice.call(a),Ib(a),a}else{if(Ia&&null!=a&&a instanceof Uint8Array)return Ka(a);if(a instanceof ib){var b=a.V;return null==b?\"\":\"string\"===typeof b?b:a.V=Ka(b)}}}return a};function Ub(a,b,c,d){if(null!=a){if(Array.isArray(a))a=Vb(a,b,c,void 0!==d);else if(Eb(a)){var e={},g;for(g in a)e[g]=Ub(a[g],b,c,d);a=e}else a=b(a,d);return a}}function Vb(a,b,c,d){var e=Q(a);d=d?!!(e&16):void 0;a=Array.prototype.slice.call(a);for(var g=0;g<a.length;g++)a[g]=Ub(a[g],b,c,d);c(e,a);return a}function Wb(a){return a.ja===Db?a.toJSON():Tb(a)}function Xb(a,b){a&128&&Ib(b)};function Yb(a,b,c){c=void 0===c?Cb:c;if(null!=a){if(Ia&&a instanceof Uint8Array)return a.length?new ib(new Uint8Array(a),Qa):jb();if(Array.isArray(a)){var d=Q(a);if(d&2)return a;if(b&&!(d&32)&&(d&16||0===d))return R(a,d|2),a;a=Vb(a,Yb,d&4?Cb:c,!0);b=Q(a);b&4&&b&2&&Object.freeze(a);return a}return a.ja===Db?Zb(a):a}}\nfunction $b(a,b,c,d,e,g,f){if(a=a.h&&a.h[c]){d=Q(a);d&2?d=a:(g=Ca(a,Zb),Cb(d,g),Object.freeze(g),d=g);Hb(b);f=null==d?Fb:Ab([]);if(null!=d){g=!!d.length;for(a=0;a<d.length;a++){var h=d[a];g=g&&!(Q(h.o)&2);f[a]=h.o}g=(g?8:0)|1;a=Q(f);(a&g)!==g&&(Object.isFrozen(f)&&(f=Array.prototype.slice.call(f)),R(f,a|g));b.h||(b.h={});b.h[c]=d}else b.h&&(b.h[c]=void 0);Kb(b,c,f,e)}else U(b,c,Yb(d,g,f),e)}function Zb(a){if(Q(a.o)&2)return a;a=Pb(a,!0);P(a.o,2);return a}\nfunction Pb(a,b){var c=a.o,d=[];P(d,16);var e=a.constructor.h;e&&d.push(e);e=a.B;if(e){d.length=c.length;d.fill(void 0,d.length,c.length);var g={};d[d.length-1]=g}0!==(Q(c)&128)&&Ib(d);b=b||a.C()?Cb:Bb;g=a.constructor;Sb=d;d=new g(d);Sb=void 0;a.R&&(d.R=a.R.slice());g=!!(Q(c)&16);for(var f=e?c.length-1:c.length,h=0;h<f;h++)$b(a,d,h-a.G,c[h],!1,g,b);if(e)for(var k in e)$b(a,d,+k,e[k],!0,g,b);return d};function X(a,b,c){null==a&&(a=Sb);Sb=void 0;var d=this.constructor.i||0,e=0<d,g=this.constructor.h,f=!1;if(null==a){a=g?[g]:[];var h=48;var k=!0;e&&(d=0,h|=128);R(a,h)}else{if(!Array.isArray(a))throw Error();if(g&&g!==a[0])throw Error();var l=h=P(a,0);if(k=0!==(16&l))(f=0!==(32&l))||(l|=32);if(e)if(128&l)d=0;else{if(0<a.length){var m=a[a.length-1];if(Eb(m)&&\"g\"in m){d=0;l|=128;delete m.g;var r=!0,p;for(p in m){r=!1;break}r&&a.pop()}}}else if(128&l)throw Error();h!==l&&R(a,l)}this.G=(g?0:-1)-d;this.h=\nvoid 0;this.o=a;a:{g=this.o.length;d=g-1;if(g&&(g=this.o[d],Eb(g))){this.B=g;this.i=d-this.G;break a}void 0!==b&&-1<b?(this.i=Math.max(b,d+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!e&&this.B&&\"g\"in this.B)throw Error('Unexpected \"g\" flag in sparse object of message that is not a group type.');if(c){b=k&&!f&&!0;e=this.i;var n;for(k=0;k<c.length;k++)f=c[k],f<e?(f+=this.G,(d=a[f])?ac(d,b):a[f]=Fb):(n||(n=Jb(this)),(d=n[f])?ac(d,b):n[f]=Fb)}}\nX.prototype.toJSON=function(){return Vb(this.o,Wb,Xb)};X.prototype.C=function(){return!!(Q(this.o)&2)};function ac(a,b){if(Array.isArray(a)){var c=Q(a),d=1;!b||c&2||(d|=16);(c&d)!==d&&R(a,c|d)}}X.prototype.ja=Db;X.prototype.toString=function(){return this.o.toString()};function bc(a,b,c){if(c){var d={},e;for(e in c){var g=c[e],f=g.ra;f||(d.J=g.xa||g.oa.W,g.ia?(d.aa=cc(g.ia),f=function(h){return function(k,l,m){return h.J(k,l,m,h.aa)}}(d)):g.ka?(d.Z=dc(g.da.P,g.ka),f=function(h){return function(k,l,m){return h.J(k,l,m,h.Z)}}(d)):f=d.J,g.ra=f);f(b,a,g.da);d={J:d.J,aa:d.aa,Z:d.Z}}}yb(b,a)}var ec=Symbol();function fc(a,b,c){return a[ec]||(a[ec]=function(d,e){return b(d,e,c)})}\nfunction gc(a){var b=a[ec];if(!b){var c=hc(a);b=function(d,e){return ic(d,e,c)};a[ec]=b}return b}function jc(a){var b=a.ia;if(b)return gc(b);if(b=a.wa)return fc(a.da.P,b,a.ka)}function kc(a){var b=jc(a),c=a.da,d=a.oa.U;return b?function(e,g){return d(e,g,c,b)}:function(e,g){return d(e,g,c)}}function lc(a,b){var c=a[b];\"function\"==typeof c&&0===c.length&&(c=c(),a[b]=c);return Array.isArray(c)&&(mc in c||nc in c||0<c.length&&\"function\"==typeof c[0])?c:void 0}\nfunction oc(a,b,c,d,e,g){b.P=a[0];var f=1;if(a.length>f&&\"number\"!==typeof a[f]){var h=a[f++];c(b,h)}for(;f<a.length;){c=a[f++];for(var k=f+1;k<a.length&&\"number\"!==typeof a[k];)k++;h=a[f++];k-=f;switch(k){case 0:d(b,c,h);break;case 1:(k=lc(a,f))?(f++,e(b,c,h,k)):d(b,c,h,a[f++]);break;case 2:k=f++;k=lc(a,k);e(b,c,h,k,a[f++]);break;case 3:g(b,c,h,a[f++],a[f++],a[f++]);break;case 4:g(b,c,h,a[f++],a[f++],a[f++],a[f++]);break;default:throw Error(\"unexpected number of binary field arguments: \"+k);}}return b}\nvar pc=Symbol();function cc(a){var b=a[pc];if(!b){var c=qc(a);b=function(d,e){return rc(d,e,c)};a[pc]=b}return b}function dc(a,b){var c=a[pc];c||(c=function(d,e){return bc(d,e,b)},a[pc]=c);return c}var nc=Symbol();function sc(a,b){a.push(b)}function tc(a,b,c){a.push(b,c.W)}function uc(a,b,c,d){var e=cc(d),g=qc(d).P,f=c.W;a.push(b,function(h,k,l){return f(h,k,l,g,e)})}function vc(a,b,c,d,e,g){var f=dc(d,g),h=c.W;a.push(b,function(k,l,m){return h(k,l,m,d,f)})}\nfunction qc(a){var b=a[nc];if(b)return b;b=oc(a,a[nc]=[],sc,tc,uc,vc);mc in a&&nc in a&&(a.length=0);return b}var mc=Symbol();function wc(a,b){a[0]=b}function xc(a,b,c,d){var e=c.U;a[b]=d?function(g,f,h){return e(g,f,h,d)}:e}function yc(a,b,c,d,e){var g=c.U,f=gc(d),h=hc(d).P;a[b]=function(k,l,m){return g(k,l,m,h,f,e)}}function zc(a,b,c,d,e,g,f){var h=c.U,k=fc(d,e,g);a[b]=function(l,m,r){return h(l,m,r,d,k,f)}}\nfunction hc(a){var b=a[mc];if(b)return b;b=oc(a,a[mc]={},wc,xc,yc,zc);mc in a&&nc in a&&(a.length=0);return b}\nfunction ic(a,b,c){for(;ub(b)&&4!=b.i;){var d=b.l,e=c[d];if(!e){var g=c[0];g&&(g=g[d])&&(e=c[d]=kc(g))}if(!e||!e(b,a,d)){e=b;d=a;g=e.j;vb(e);var f=e;if(!f.ca){e=f.h.h-g;f.h.h=g;f=f.h;if(0==e)e=jb();else{g=pb(f,e);if(f.S&&f.m)e=f.i.subarray(g,g+e);else{f=f.i;var h=g;e=g+e;e=h===e?Pa():Ra?f.slice(h,e):new Uint8Array(f.subarray(h,e))}e=0==e.length?jb():new ib(e,Qa)}(g=d.R)?g.push(e):d.R=[e]}}}return a}\nfunction rc(a,b,c){for(var d=c.length,e=1==d%2,g=e?1:0;g<d;g+=2)(0,c[g+1])(b,a,c[g]);bc(a,b,e?c[0]:void 0)}function Ac(a,b){return{U:a,W:b}}\nvar Y=Ac(function(a,b,c){if(5!==a.i)return!1;a=a.h;var d=a.i,e=a.h,g=d[e];var f=d[e+1];var h=d[e+2];d=d[e+3];L(a,a.h+4);f=(g<<0|f<<8|h<<16|d<<24)>>>0;a=2*(f>>31)+1;g=f>>>23&255;f&=8388607;U(b,c,255==g?f?NaN:Infinity*a:0==g?a*Math.pow(2,-149)*f:a*Math.pow(2,g-150)*(f+Math.pow(2,23)));return!0},function(a,b,c){b=Mb(b,c);if(null!=b){M(a.h,8*c+5);a=a.h;var d=+b;0===d?0<1/d?G=H=0:(H=0,G=2147483648):isNaN(d)?(H=0,G=2147483647):(d=(c=0>d?-2147483648:0)?-d:d,3.4028234663852886E38<d?(H=0,G=(c|2139095040)>>>\n0):1.1754943508222875E-38>d?(d=Math.round(d/Math.pow(2,-149)),H=0,G=(c|d)>>>0):(b=Math.floor(Math.log(d)/Math.LN2),d*=Math.pow(2,-b),d=Math.round(8388608*d),16777216<=d&&++b,H=0,G=(c|b+127<<23|d&8388607)>>>0));c=G;a.h.push(c>>>0&255);a.h.push(c>>>8&255);a.h.push(c>>>16&255);a.h.push(c>>>24&255)}}),Bc=Ac(function(a,b,c){if(0!==a.i)return!1;var d=a.h,e=0,g=a=0,f=d.i,h=d.h;do{var k=f[h++];e|=(k&127)<<g;g+=7}while(32>g&&k&128);32<g&&(a|=(k&127)>>4);for(g=3;32>g&&k&128;g+=7)k=f[h++],a|=(k&127)<<g;L(d,\nh);if(128>k){d=e>>>0;k=a>>>0;if(a=k&2147483648)d=~d+1>>>0,k=~k>>>0,0==d&&(k=k+1>>>0);d=4294967296*k+(d>>>0)}else throw Za();U(b,c,a?-d:d);return!0},function(a,b,c){b=S(b,c);null!=b&&(\"string\"===typeof b&&Wa(b),null!=b&&(M(a.h,8*c),\"number\"===typeof b?(a=a.h,Sa(b),sb(a,G,H)):(c=Wa(b),sb(a.h,c.i,c.h))))}),Cc=Ac(function(a,b,c){if(0!==a.i)return!1;U(b,c,ob(a.h));return!0},function(a,b,c){b=S(b,c);if(null!=b&&null!=b)if(M(a.h,8*c),a=a.h,c=b,0<=c)M(a,c);else{for(b=0;9>b;b++)a.h.push(c&127|128),c>>=7;a.h.push(1)}}),\nDc=Ac(function(a,b,c){if(2!==a.i)return!1;var d=ob(a.h)>>>0;a=a.h;var e=pb(a,d);a=a.i;if(db){var g=a,f;(f=cb)||(f=cb=new TextDecoder(\"utf-8\",{fatal:!0}));a=e+d;g=0===e&&a===g.length?g:g.subarray(e,a);try{var h=f.decode(g)}catch(r){if(void 0===bb){try{f.decode(new Uint8Array([128]))}catch(p){}try{f.decode(new Uint8Array([97])),bb=!0}catch(p){bb=!1}}!bb&&(cb=void 0);throw r;}}else{h=e;d=h+d;e=[];for(var k=null,l,m;h<d;)l=a[h++],128>l?e.push(l):224>l?h>=d?K():(m=a[h++],194>l||128!==(m&192)?(h--,K()):\ne.push((l&31)<<6|m&63)):240>l?h>=d-1?K():(m=a[h++],128!==(m&192)||224===l&&160>m||237===l&&160<=m||128!==((g=a[h++])&192)?(h--,K()):e.push((l&15)<<12|(m&63)<<6|g&63)):244>=l?h>=d-2?K():(m=a[h++],128!==(m&192)||0!==(l<<28)+(m-144)>>30||128!==((g=a[h++])&192)||128!==((f=a[h++])&192)?(h--,K()):(l=(l&7)<<18|(m&63)<<12|(g&63)<<6|f&63,l-=65536,e.push((l>>10&1023)+55296,(l&1023)+56320))):K(),8192<=e.length&&(k=ab(k,e),e.length=0);h=ab(k,e)}U(b,c,h);return!0},function(a,b,c){b=S(b,c);if(null!=b){var d=!1;\nd=void 0===d?!1:d;if(fb){if(d&&/(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/.test(b))throw Error(\"Found an unpaired surrogate\");b=(eb||(eb=new TextEncoder)).encode(b)}else{for(var e=0,g=new Uint8Array(3*b.length),f=0;f<b.length;f++){var h=b.charCodeAt(f);if(128>h)g[e++]=h;else{if(2048>h)g[e++]=h>>6|192;else{if(55296<=h&&57343>=h){if(56319>=h&&f<b.length){var k=b.charCodeAt(++f);if(56320<=k&&57343>=k){h=1024*(h-55296)+k-56320+65536;g[e++]=h>>18|240;g[e++]=h>>12&63|128;\ng[e++]=h>>6&63|128;g[e++]=h&63|128;continue}else f--}if(d)throw Error(\"Found an unpaired surrogate\");h=65533}g[e++]=h>>12|224;g[e++]=h>>6&63|128}g[e++]=h&63|128}}b=e===g.length?g:g.subarray(0,e)}M(a.h,8*c+2);M(a.h,b.length);N(a,a.h.end());N(a,b)}}),Ec=Ac(function(a,b,c,d,e){if(2!==a.i)return!1;b=Qb(b,c,d);c=a.h.j;d=ob(a.h)>>>0;var g=a.h.h+d,f=g-c;0>=f&&(a.h.j=g,e(b,a,void 0,void 0,void 0),f=g-a.h.h);if(f)throw Error(\"Message parsing ended unexpectedly. Expected to read \"+(d+\" bytes, instead read \"+\n(d-f)+\" bytes, either the data ended unexpectedly or the message misreported its own length\"));a.h.h=g;a.h.j=c;return!0},function(a,b,c,d,e){b=Ob(b,d,c);if(null!=b)for(d=0;d<b.length;d++){var g=a;M(g.h,8*c+2);var f=g.h.end();N(g,f);f.push(g.i);g=f;e(b[d],a);f=a;var h=g.pop();for(h=f.i+f.h.length()-h;127<h;)g.push(h&127|128),h>>>=7,f.i++;g.push(h);f.i++}});function Fc(a){return function(b,c){a:{if(wb.length){var d=wb.pop();d.setOptions(c);nb(d.h,b,c);b=d}else b=new tb(b,c);try{var e=hc(a);var g=ic(new e.P,b,e);break a}finally{e=b.h,e.i=null,e.m=!1,e.l=0,e.j=0,e.h=0,e.S=!1,b.l=-1,b.i=-1,100>wb.length&&wb.push(b)}g=void 0}return g}}function Gc(a){return function(){var b=new xb;rc(this,b,qc(a));N(b,b.h.end());for(var c=new Uint8Array(b.i),d=b.j,e=d.length,g=0,f=0;f<e;f++){var h=d[f];c.set(h,g);g+=h.length}b.j=[c];return c}};function Z(a){X.call(this,a)}na(Z,X);var Hc=[Z,1,Cc,2,Y,3,Dc,4,Dc];Z.prototype.l=Gc(Hc);function Ic(a){X.call(this,a,-1,Jc)}na(Ic,X);Ic.prototype.addClassification=function(a,b){Qb(this,1,Z,a,b);return this};var Jc=[1],Kc=Fc([Ic,1,Ec,Hc]);function Lc(a){X.call(this,a)}na(Lc,X);var Mc=[Lc,1,Y,2,Y,3,Y,4,Y,5,Y];Lc.prototype.l=Gc(Mc);function Nc(a){X.call(this,a,-1,Oc)}na(Nc,X);var Oc=[1],Pc=Fc([Nc,1,Ec,Mc]);function Qc(a){X.call(this,a)}na(Qc,X);var Rc=[Qc,1,Y,2,Y,3,Y,4,Y,5,Y,6,Bc],Sc=Fc(Rc);Qc.prototype.l=Gc(Rc);function Tc(a,b,c){c=a.createShader(0===c?a.VERTEX_SHADER:a.FRAGMENT_SHADER);a.shaderSource(c,b);a.compileShader(c);if(!a.getShaderParameter(c,a.COMPILE_STATUS))throw Error(\"Could not compile WebGL shader.\\n\\n\"+a.getShaderInfoLog(c));return c};function Uc(a){return Ob(a,Z,1).map(function(b){var c=S(b,1);return{index:null==c?0:c,qa:W(b,2),label:null!=S(b,3)?Rb(S(b,3),\"\"):void 0,displayName:null!=S(b,4)?Rb(S(b,4),\"\"):void 0}})};function Vc(a){return{x:W(a,1),y:W(a,2),z:W(a,3),visibility:null!=Mb(a,4)?W(a,4):void 0}};function Wc(a,b){this.i=a;this.h=b;this.m=0}\nfunction Xc(a,b,c){Yc(a,b);if(\"function\"===typeof a.h.canvas.transferToImageBitmap)return Promise.resolve(a.h.canvas.transferToImageBitmap());if(c)return Promise.resolve(a.h.canvas);if(\"function\"===typeof createImageBitmap)return createImageBitmap(a.h.canvas);void 0===a.j&&(a.j=document.createElement(\"canvas\"));return new Promise(function(d){a.j.height=a.h.canvas.height;a.j.width=a.h.canvas.width;a.j.getContext(\"2d\",{}).drawImage(a.h.canvas,0,0,a.h.canvas.width,a.h.canvas.height);d(a.j)})}\nfunction Yc(a,b){var c=a.h;if(void 0===a.s){var d=Tc(c,\"\\n  attribute vec2 aVertex;\\n  attribute vec2 aTex;\\n  varying vec2 vTex;\\n  void main(void) {\\n    gl_Position = vec4(aVertex, 0.0, 1.0);\\n    vTex = aTex;\\n  }\",0),e=Tc(c,\"\\n  precision mediump float;\\n  varying vec2 vTex;\\n  uniform sampler2D sampler0;\\n  void main(){\\n    gl_FragColor = texture2D(sampler0, vTex);\\n  }\",1),g=c.createProgram();c.attachShader(g,d);c.attachShader(g,e);c.linkProgram(g);if(!c.getProgramParameter(g,c.LINK_STATUS))throw Error(\"Could not compile WebGL program.\\n\\n\"+\nc.getProgramInfoLog(g));d=a.s=g;c.useProgram(d);e=c.getUniformLocation(d,\"sampler0\");a.l={O:c.getAttribLocation(d,\"aVertex\"),N:c.getAttribLocation(d,\"aTex\"),ya:e};a.v=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.v);c.enableVertexAttribArray(a.l.O);c.vertexAttribPointer(a.l.O,2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);a.u=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.u);c.enableVertexAttribArray(a.l.N);c.vertexAttribPointer(a.l.N,\n2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);c.uniform1i(e,0)}d=a.l;c.useProgram(a.s);c.canvas.width=b.width;c.canvas.height=b.height;c.viewport(0,0,b.width,b.height);c.activeTexture(c.TEXTURE0);a.i.bindTexture2d(b.glName);c.enableVertexAttribArray(d.O);c.bindBuffer(c.ARRAY_BUFFER,a.v);c.vertexAttribPointer(d.O,2,c.FLOAT,!1,0,0);c.enableVertexAttribArray(d.N);c.bindBuffer(c.ARRAY_BUFFER,a.u);c.vertexAttribPointer(d.N,\n2,c.FLOAT,!1,0,0);c.bindFramebuffer(c.DRAW_FRAMEBUFFER?c.DRAW_FRAMEBUFFER:c.FRAMEBUFFER,null);c.clearColor(0,0,0,0);c.clear(c.COLOR_BUFFER_BIT);c.colorMask(!0,!0,!0,!0);c.drawArrays(c.TRIANGLE_FAN,0,4);c.disableVertexAttribArray(d.O);c.disableVertexAttribArray(d.N);c.bindBuffer(c.ARRAY_BUFFER,null);a.i.bindTexture2d(0)}function Zc(a){this.h=a};var $c=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ad(a,b){return b+a}function bd(a,b){window[a]=b}function cd(a){var b=document.createElement(\"script\");b.setAttribute(\"src\",a);b.setAttribute(\"crossorigin\",\"anonymous\");return new Promise(function(c){b.addEventListener(\"load\",function(){c()},!1);b.addEventListener(\"error\",function(){c()},!1);document.body.appendChild(b)})}\nfunction dd(){return E(function(a){switch(a.h){case 1:return a.s=2,D(a,WebAssembly.instantiate($c),4);case 4:a.h=3;a.s=0;break;case 2:return a.s=0,a.l=null,a.return(!1);case 3:return a.return(!0)}})}\nfunction ed(a){this.h=a;this.listeners={};this.l={};this.L={};this.s={};this.v={};this.M=this.u=this.ga=!0;this.I=Promise.resolve();this.fa=\"\";this.D={};this.locateFile=a&&a.locateFile||ad;if(\"object\"===typeof window)var b=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf(\"/\"))+\"/\";else if(\"undefined\"!==typeof location)b=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf(\"/\"))+\"/\";else throw Error(\"solutions can only be loaded on a web page or in a web worker\");\nthis.ha=b;if(a.options){b=A(Object.keys(a.options));for(var c=b.next();!c.done;c=b.next()){c=c.value;var d=a.options[c].default;void 0!==d&&(this.l[c]=\"function\"===typeof d?d():d)}}}x=ed.prototype;x.close=function(){this.j&&this.j.delete();return Promise.resolve()};\nfunction fd(a){var b,c,d,e,g,f,h,k,l,m,r;return E(function(p){switch(p.h){case 1:if(!a.ga)return p.return();b=void 0===a.h.files?[]:\"function\"===typeof a.h.files?a.h.files(a.l):a.h.files;return D(p,dd(),2);case 2:c=p.i;if(\"object\"===typeof window)return bd(\"createMediapipeSolutionsWasm\",{locateFile:a.locateFile}),bd(\"createMediapipeSolutionsPackedAssets\",{locateFile:a.locateFile}),f=b.filter(function(n){return void 0!==n.data}),h=b.filter(function(n){return void 0===n.data}),k=Promise.all(f.map(function(n){var q=\ngd(a,n.url);if(void 0!==n.path){var t=n.path;q=q.then(function(w){a.overrideFile(t,w);return Promise.resolve(w)})}return q})),l=Promise.all(h.map(function(n){return void 0===n.simd||n.simd&&c||!n.simd&&!c?cd(a.locateFile(n.url,a.ha)):Promise.resolve()})).then(function(){var n,q,t;return E(function(w){if(1==w.h)return n=window.createMediapipeSolutionsWasm,q=window.createMediapipeSolutionsPackedAssets,t=a,D(w,n(q),2);t.i=w.i;w.h=0})}),m=function(){return E(function(n){a.h.graph&&a.h.graph.url?n=D(n,\ngd(a,a.h.graph.url),0):(n.h=0,n=void 0);return n})}(),D(p,Promise.all([l,k,m]),7);if(\"function\"!==typeof importScripts)throw Error(\"solutions can only be loaded on a web page or in a web worker\");d=b.filter(function(n){return void 0===n.simd||n.simd&&c||!n.simd&&!c}).map(function(n){return a.locateFile(n.url,a.ha)});importScripts.apply(null,ea(d));e=a;return D(p,createMediapipeSolutionsWasm(Module),6);case 6:e.i=p.i;a.m=new OffscreenCanvas(1,1);a.i.canvas=a.m;g=a.i.GL.createContext(a.m,{antialias:!1,\nalpha:!1,va:\"undefined\"!==typeof WebGL2RenderingContext?2:1});a.i.GL.makeContextCurrent(g);p.h=4;break;case 7:a.m=document.createElement(\"canvas\");r=a.m.getContext(\"webgl2\",{});if(!r&&(r=a.m.getContext(\"webgl\",{}),!r))return alert(\"Failed to create WebGL canvas context when passing video frame.\"),p.return();a.K=r;a.i.canvas=a.m;a.i.createContext(a.m,!0,!0,{});case 4:a.j=new a.i.SolutionWasm,a.ga=!1,p.h=0}})}\nfunction hd(a){var b,c,d,e,g,f,h,k;return E(function(l){if(1==l.h){if(a.h.graph&&a.h.graph.url&&a.fa===a.h.graph.url)return l.return();a.u=!0;if(!a.h.graph||!a.h.graph.url){l.h=2;return}a.fa=a.h.graph.url;return D(l,gd(a,a.h.graph.url),3)}2!=l.h&&(b=l.i,a.j.loadGraph(b));c=A(Object.keys(a.D));for(d=c.next();!d.done;d=c.next())e=d.value,a.j.overrideFile(e,a.D[e]);a.D={};if(a.h.listeners)for(g=A(a.h.listeners),f=g.next();!f.done;f=g.next())h=f.value,id(a,h);k=a.l;a.l={};a.setOptions(k);l.h=0})}\nx.reset=function(){var a=this;return E(function(b){a.j&&(a.j.reset(),a.s={},a.v={});b.h=0})};\nx.setOptions=function(a,b){var c=this;if(b=b||this.h.options){for(var d=[],e=[],g={},f=A(Object.keys(a)),h=f.next();!h.done;g={X:g.X,Y:g.Y},h=f.next())if(h=h.value,!(h in this.l&&this.l[h]===a[h])){this.l[h]=a[h];var k=b[h];void 0!==k&&(k.onChange&&(g.X=k.onChange,g.Y=a[h],d.push(function(l){return function(){var m;return E(function(r){if(1==r.h)return D(r,l.X(l.Y),2);m=r.i;!0===m&&(c.u=!0);r.h=0})}}(g))),k.graphOptionXref&&(h=Object.assign({},{calculatorName:\"\",calculatorIndex:0},k.graphOptionXref,\n{valueNumber:1===k.type?a[h]:0,valueBoolean:0===k.type?a[h]:!1,valueString:2===k.type?a[h]:\"\"}),e.push(h)))}if(0!==d.length||0!==e.length)this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(e),this.F=(void 0===this.F?[]:this.F).concat(d)}};\nfunction jd(a){var b,c,d,e,g,f,h;return E(function(k){switch(k.h){case 1:if(!a.u)return k.return();if(!a.F){k.h=2;break}b=A(a.F);c=b.next();case 3:if(c.done){k.h=5;break}d=c.value;return D(k,d(),4);case 4:c=b.next();k.h=3;break;case 5:a.F=void 0;case 2:if(a.H){e=new a.i.GraphOptionChangeRequestList;g=A(a.H);for(f=g.next();!f.done;f=g.next())h=f.value,e.push_back(h);a.j.changeOptions(e);e.delete();a.H=void 0}a.u=!1;k.h=0}})}\nx.initialize=function(){var a=this;return E(function(b){return 1==b.h?D(b,fd(a),2):3!=b.h?D(b,hd(a),3):D(b,jd(a),0)})};function gd(a,b){var c,d;return E(function(e){if(b in a.L)return e.return(a.L[b]);c=a.locateFile(b,\"\");d=fetch(c).then(function(g){return g.arrayBuffer()});a.L[b]=d;return e.return(d)})}x.overrideFile=function(a,b){this.j?this.j.overrideFile(a,b):this.D[a]=b};x.clearOverriddenFiles=function(){this.D={};this.j&&this.j.clearOverriddenFiles()};\nx.send=function(a,b){var c=this,d,e,g,f,h,k,l,m,r;return E(function(p){switch(p.h){case 1:if(!c.h.inputs)return p.return();d=1E3*(void 0===b||null===b?performance.now():b);return D(p,c.I,2);case 2:return D(p,c.initialize(),3);case 3:e=new c.i.PacketDataList;g=A(Object.keys(a));for(f=g.next();!f.done;f=g.next())if(h=f.value,k=c.h.inputs[h]){a:{var n=a[h];switch(k.type){case \"video\":var q=c.s[k.stream];q||(q=new Wc(c.i,c.K),c.s[k.stream]=q);0===q.m&&(q.m=q.i.createTexture());if(\"undefined\"!==typeof HTMLVideoElement&&\nn instanceof HTMLVideoElement){var t=n.videoWidth;var w=n.videoHeight}else\"undefined\"!==typeof HTMLImageElement&&n instanceof HTMLImageElement?(t=n.naturalWidth,w=n.naturalHeight):(t=n.width,w=n.height);w={glName:q.m,width:t,height:w};t=q.h;t.canvas.width=w.width;t.canvas.height=w.height;t.activeTexture(t.TEXTURE0);q.i.bindTexture2d(q.m);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n);q.i.bindTexture2d(0);q=w;break a;case \"detections\":q=c.s[k.stream];q||(q=new Zc(c.i),c.s[k.stream]=q);\nq.data||(q.data=new q.h.DetectionListData);q.data.reset(n.length);for(w=0;w<n.length;++w){t=n[w];var v=q.data,B=v.setBoundingBox,J=w;var I=t.la;var u=new Qc;V(u,1,I.sa);V(u,2,I.ta);V(u,3,I.height);V(u,4,I.width);V(u,5,I.rotation);U(u,6,I.pa);I=u.l();B.call(v,J,I);if(t.ea)for(v=0;v<t.ea.length;++v){u=t.ea[v];B=q.data;J=B.addNormalizedLandmark;I=w;u=Object.assign({},u,{visibility:u.visibility?u.visibility:0});var C=new Lc;V(C,1,u.x);V(C,2,u.y);V(C,3,u.z);u.visibility&&V(C,4,u.visibility);u=C.l();J.call(B,\nI,u)}if(t.ba)for(v=0;v<t.ba.length;++v)B=q.data,J=B.addClassification,I=w,u=t.ba[v],C=new Z,V(C,2,u.qa),u.index&&U(C,1,u.index),u.label&&U(C,3,u.label),u.displayName&&U(C,4,u.displayName),u=C.l(),J.call(B,I,u)}q=q.data;break a;default:q={}}}l=q;m=k.stream;switch(k.type){case \"video\":e.pushTexture2d(Object.assign({},l,{stream:m,timestamp:d}));break;case \"detections\":r=l;r.stream=m;r.timestamp=d;e.pushDetectionList(r);break;default:throw Error(\"Unknown input config type: '\"+k.type+\"'\");}}c.j.send(e);\nreturn D(p,c.I,4);case 4:e.delete(),p.h=0}})};\nfunction kd(a,b,c){var d,e,g,f,h,k,l,m,r,p,n,q,t,w;return E(function(v){switch(v.h){case 1:if(!c)return v.return(b);d={};e=0;g=A(Object.keys(c));for(f=g.next();!f.done;f=g.next())h=f.value,k=c[h],\"string\"!==typeof k&&\"texture\"===k.type&&void 0!==b[k.stream]&&++e;1<e&&(a.M=!1);l=A(Object.keys(c));f=l.next();case 2:if(f.done){v.h=4;break}m=f.value;r=c[m];if(\"string\"===typeof r)return t=d,w=m,D(v,ld(a,m,b[r]),14);p=b[r.stream];if(\"detection_list\"===r.type){if(p){var B=p.getRectList();for(var J=p.getLandmarksList(),\nI=p.getClassificationsList(),u=[],C=0;C<B.size();++C){var T=Sc(B.get(C)),od=W(T,1),pd=W(T,2),qd=W(T,3),rd=W(T,4),sd=W(T,5,0),za=void 0;za=void 0===za?0:za;T={la:{sa:od,ta:pd,height:qd,width:rd,rotation:sd,pa:Rb(S(T,6),za)},ea:Ob(Pc(J.get(C)),Lc,1).map(Vc),ba:Uc(Kc(I.get(C)))};u.push(T)}B=u}else B=[];d[m]=B;v.h=7;break}if(\"proto_list\"===r.type){if(p){B=Array(p.size());for(J=0;J<p.size();J++)B[J]=p.get(J);p.delete()}else B=[];d[m]=B;v.h=7;break}if(void 0===p){v.h=3;break}if(\"float_list\"===r.type){d[m]=\np;v.h=7;break}if(\"proto\"===r.type){d[m]=p;v.h=7;break}if(\"texture\"!==r.type)throw Error(\"Unknown output config type: '\"+r.type+\"'\");n=a.v[m];n||(n=new Wc(a.i,a.K),a.v[m]=n);return D(v,Xc(n,p,a.M),13);case 13:q=v.i,d[m]=q;case 7:r.transform&&d[m]&&(d[m]=r.transform(d[m]));v.h=3;break;case 14:t[w]=v.i;case 3:f=l.next();v.h=2;break;case 4:return v.return(d)}})}\nfunction ld(a,b,c){var d;return E(function(e){return\"number\"===typeof c||c instanceof Uint8Array||c instanceof a.i.Uint8BlobList?e.return(c):c instanceof a.i.Texture2dDataOut?(d=a.v[b],d||(d=new Wc(a.i,a.K),a.v[b]=d),e.return(Xc(d,c,a.M))):e.return(void 0)})}\nfunction id(a,b){for(var c=b.name||\"$\",d=[].concat(ea(b.wants)),e=new a.i.StringList,g=A(b.wants),f=g.next();!f.done;f=g.next())e.push_back(f.value);g=a.i.PacketListener.implement({onResults:function(h){for(var k={},l=0;l<b.wants.length;++l)k[d[l]]=h.get(l);var m=a.listeners[c];m&&(a.I=kd(a,k,b.outs).then(function(r){r=m(r);for(var p=0;p<b.wants.length;++p){var n=k[d[p]];\"object\"===typeof n&&n.hasOwnProperty&&n.hasOwnProperty(\"delete\")&&n.delete()}r&&(a.I=r)}))}});a.j.attachMultiListener(e,g);e.delete()}\nx.onResults=function(a,b){this.listeners[b||\"$\"]=a};Aa(\"Solution\",ed);Aa(\"OptionType\",{BOOL:0,NUMBER:1,ua:2,0:\"BOOL\",1:\"NUMBER\",2:\"STRING\"});function md(a){void 0===a&&(a=0);switch(a){case 1:return\"selfie_segmentation_landscape.tflite\";default:return\"selfie_segmentation.tflite\"}}\nfunction nd(a){var b=this;a=a||{};this.h=new ed({locateFile:a.locateFile,files:function(c){return[{simd:!0,url:\"selfie_segmentation_solution_simd_wasm_bin.js\"},{simd:!1,url:\"selfie_segmentation_solution_wasm_bin.js\"},{data:!0,url:md(c.modelSelection)}]},graph:{url:\"selfie_segmentation.binarypb\"},listeners:[{wants:[\"segmentation_mask\",\"image_transformed\"],outs:{image:{type:\"texture\",stream:\"image_transformed\"},segmentationMask:{type:\"texture\",stream:\"segmentation_mask\"}}}],inputs:{image:{type:\"video\",\nstream:\"input_frames_gpu\"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:\"InferenceCalculator\",fieldName:\"use_cpu_inference\"},default:\"object\"!==typeof window||void 0===window.navigator?!1:\"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod\".split(\";\").includes(navigator.platform)||navigator.userAgent.includes(\"Mac\")&&\"ontouchend\"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:\"GlScalerCalculator\",calculatorIndex:1,fieldName:\"flip_horizontal\"}},modelSelection:{type:1,\ngraphOptionXref:{calculatorType:\"ConstantSidePacketCalculator\",calculatorName:\"ConstantSidePacketCalculatorModelSelection\",fieldName:\"int_value\"},onChange:function(c){var d,e,g;return E(function(f){if(1==f.h)return d=md(c),e=\"third_party/mediapipe/modules/selfie_segmentation/\"+d,D(f,gd(b.h,d),2);g=f.i;b.h.overrideFile(e,g);return f.return(!0)})}}}})}x=nd.prototype;x.close=function(){this.h.close();return Promise.resolve()};x.onResults=function(a){this.h.onResults(a)};\nx.initialize=function(){var a=this;return E(function(b){return D(b,a.h.initialize(),0)})};x.reset=function(){this.h.reset()};x.send=function(a){var b=this;return E(function(c){return D(c,b.h.send(a),0)})};x.setOptions=function(a){this.h.setOptions(a)};Aa(\"SelfieSegmentation\",nd);Aa(\"VERSION\",\"0.1.1675465747\");}).call(this);\n","import pkg from '../../package.json';\nimport { CleanupFn } from '../webrtc';\nimport { Results, SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\nexport async function startBackgrondBlur(\n  sourceVideoEl: HTMLVideoElement,\n  targetVideoEl: HTMLVideoElement\n): Promise<CleanupFn> {\n  // some last dom-based stuff\n  const [sourceVideoTrack] = (sourceVideoEl.srcObject as MediaStream).getVideoTracks();\n  const width = sourceVideoEl.clientWidth || 640;\n  const height = sourceVideoEl.clientHeight || 480;\n\n  // setup semantic segmentation, downloading its models and other metadata\n  const selfieSegmentation = new SelfieSegmentation({\n    locateFile: (file) =>\n      `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation@${pkg.dependencies['@mediapipe/selfie_segmentation']}/${file}`,\n  });\n  selfieSegmentation.setOptions({\n    modelSelection: 1,\n    selfieMode: true,\n  });\n\n  // setup drawing callback,\n  // to make use of mediapipe results by blurring each frame in a canvas.\n  const canvas = new OffscreenCanvas(width, height);\n  const canvasCtx = canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n\n  selfieSegmentation.onResults((results: Results) => {\n    canvasCtx.save();\n\n    canvasCtx.clearRect(0, 0, width, height);\n    canvasCtx.filter = '';\n\n    // just redraw entire image in default composition.\n    canvasCtx.globalCompositeOperation = 'source-over';\n    canvasCtx.drawImage(results.image, 0, 0, width, height);\n\n    // existing image is kept only where selfie segment overlaps it,\n    // i.e., now only selfie will remain.\n    canvasCtx.globalCompositeOperation = 'destination-in';\n    canvasCtx.drawImage(results.segmentationMask, 0, 0, width, height);\n\n    // draw blurred image behind existing content,\n    // i.e., now selfie will remain but with the blurred image behind it.\n    canvasCtx.filter = 'blur(10px)';\n    canvasCtx.globalCompositeOperation = 'destination-over';\n    canvasCtx.drawImage(results.image, 0, 0, width, height);\n\n    canvasCtx.restore();\n  });\n\n  // setup source track reader\n  const trackProcessor = new MediaStreamTrackProcessor({ track: sourceVideoTrack });\n  const { readable: trackProcessorReadable } = trackProcessor;\n\n  // setup target track writer\n  const trackGenerator = new MediaStreamTrackGenerator({ kind: 'video' });\n  const { writable: trackGeneratorWritable } = trackGenerator;\n\n  // setup transformer middleware,\n  // it's the bridge between source track and target track.\n  const transformer = new TransformStream({\n    transform: async (sourceVideoFrame, controller) => {\n      // feeds mediapipe with source frames\n      // (and mediapipe is in parallel updating the canvas with that callback)\n      // (to be clear, that canvas callback is doing the actual \"heavy work\")\n      sourceVideoFrame.width = sourceVideoFrame.displayWidth;\n      sourceVideoFrame.height = sourceVideoFrame.displayHeight;\n      await selfieSegmentation.send({ image: sourceVideoFrame });\n      sourceVideoFrame.close();\n\n      // gets whatever is happening on canvas and feed target generator\n      const newFrame = new VideoFrame(canvas, {\n        timestamp: sourceVideoFrame.timestamp,\n      });\n      controller.enqueue(newFrame);\n    },\n  });\n\n  // \"connect origin and destination with a bridge\"\n  trackProcessorReadable.pipeThrough(transformer).pipeTo(trackGeneratorWritable);\n\n  // generating track itself isn't enough and must be inside a stream\n  const processedStream = new MediaStream();\n  processedStream.addTrack(trackGenerator);\n\n  // now the target stream is attached to a DOM element and starts\n  targetVideoEl.srcObject = processedStream;\n  await targetVideoEl.play();\n\n  // build function to cleanup these resources when needed\n  const stopSelfieSegmentation = async () => {\n    processedStream.getTracks().forEach((t) => t.stop());\n    await selfieSegmentation.close(); // fyi, see: https://github.com/google/mediapipe/issues/3373\n  };\n  return stopSelfieSegmentation;\n}\n","import pkg from '../../package.json';\nimport { CleanupFn } from '../webrtc';\nimport { Results, SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\nexport async function startBackgrondReplacement(\n  sourceVideoEl: HTMLVideoElement,\n  targetVideoEl: HTMLVideoElement,\n  bgImageUrl: string = 'https://upload.wikimedia.org/wikipedia/commons/1/18/Artur_Tim%C3%B3teo_da_Costa_-_Pintor_no_ateli%C3%AA.jpg' // Artur Timóteo da Costa - Pintor no ateliê\n): Promise<CleanupFn> {\n  // some last dom-based stuff\n  const [sourceVideoTrack] = (sourceVideoEl.srcObject as MediaStream).getVideoTracks();\n  const width = sourceVideoEl.clientWidth || 640;\n  const height = sourceVideoEl.clientHeight || 480;\n\n  const bgImageBlob = await fetch(bgImageUrl).then((r) => r.blob());\n  const bgImage = await createImageBitmap(bgImageBlob);\n\n  // setup semantic segmentation, downloading its models and other metadata\n  const selfieSegmentation = new SelfieSegmentation({\n    locateFile: (file) =>\n      `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation@${pkg.dependencies['@mediapipe/selfie_segmentation']}/${file}`,\n  });\n  selfieSegmentation.setOptions({\n    modelSelection: 1,\n    selfieMode: true,\n  });\n\n  // setup drawing callback,\n  // to make use of mediapipe results to perform replacement on each frame in a canvas.\n  const canvas = new OffscreenCanvas(width, height);\n  const canvasCtx = canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n\n  selfieSegmentation.onResults((results: Results) => {\n    canvasCtx.save();\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    // just redraw entire image in default composition.\n    canvasCtx.globalCompositeOperation = 'source-over';\n    canvasCtx.drawImage(results.image, 0, 0, width, height);\n\n    // existing image is kept only where selfie segment overlaps it,\n    // i.e., now only selfie will remain.\n    canvasCtx.globalCompositeOperation = 'destination-in';\n    canvasCtx.drawImage(results.segmentationMask, 0, 0, width, height);\n\n    // draw selected image behind existing content,\n    // i.e., now selfie will remain but with the selected image behind it.\n    canvasCtx.globalCompositeOperation = 'destination-over';\n    canvasCtx.drawImage(bgImage, 0, 0, width, height);\n\n    canvasCtx.restore();\n  });\n\n  // setup source track reader\n  const trackProcessor = new MediaStreamTrackProcessor({ track: sourceVideoTrack });\n  const { readable: trackProcessorReadable } = trackProcessor;\n\n  // setup target track writer\n  const trackGenerator = new MediaStreamTrackGenerator({ kind: 'video' });\n  const { writable: trackGeneratorWritable } = trackGenerator;\n\n  // setup transformer middleware,\n  // it's the bridge between source track and target track.\n  const transformer = new TransformStream({\n    transform: async (sourceVideoFrame, controller) => {\n      // feeds mediapipe with source frames\n      // (and mediapipe is in parallel updating the canvas with that callback)\n      // (to be clear, that canvas callback is doing the actual \"heavy work\")\n      sourceVideoFrame.width = sourceVideoFrame.displayWidth;\n      sourceVideoFrame.height = sourceVideoFrame.displayHeight;\n      await selfieSegmentation.send({ image: sourceVideoFrame });\n      sourceVideoFrame.close();\n\n      // gets whatever is happening on canvas and feed target generator\n      const newFrame = new VideoFrame(canvas, {\n        timestamp: sourceVideoFrame.timestamp,\n      });\n      controller.enqueue(newFrame);\n    },\n  });\n\n  // \"connect origin and destination with a bridge\"\n  trackProcessorReadable.pipeThrough(transformer).pipeTo(trackGeneratorWritable);\n\n  // generating track itself isn't enough and must be inside a stream\n  const processedStream = new MediaStream();\n  processedStream.addTrack(trackGenerator);\n\n  // now the target stream is attached to a DOM element and starts\n  targetVideoEl.srcObject = processedStream;\n  await targetVideoEl.play();\n\n  // build function to cleanup these resources when needed\n  const stopSelfieSegmentation = async () => {\n    processedStream.getTracks().forEach((t) => t.stop());\n    await selfieSegmentation.close(); // fyi, see: https://github.com/google/mediapipe/issues/3373\n  };\n  return stopSelfieSegmentation;\n}\n","(function(){/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n'use strict';var x;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};\nfunction ca(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error(\"Cannot find global object\");}var y=ca(this);function B(a,b){if(b)a:{var c=y;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}\nB(\"Symbol\",function(a){function b(g){if(this instanceof b)throw new TypeError(\"Symbol is not a constructor\");return new c(d+(g||\"\")+\"_\"+e++,g)}function c(g,f){this.g=g;ba(this,\"description\",{configurable:!0,writable:!0,value:f})}if(a)return a;c.prototype.toString=function(){return this.g};var d=\"jscomp_symbol_\"+(1E9*Math.random()>>>0)+\"_\",e=0;return b});\nB(\"Symbol.iterator\",function(a){if(a)return a;a=Symbol(\"Symbol.iterator\");for(var b=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),c=0;c<b.length;c++){var d=y[b[c]];\"function\"===typeof d&&\"function\"!=typeof d.prototype[a]&&ba(d.prototype,a,{configurable:!0,writable:!0,value:function(){return da(aa(this))}})}return a});function da(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}\nfunction C(a){var b=\"undefined\"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}function D(a){if(!(a instanceof Array)){a=C(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var ea=\"function\"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},fa;\nif(\"function\"==typeof Object.setPrototypeOf)fa=Object.setPrototypeOf;else{var ha;a:{var ia={a:!0},ja={};try{ja.__proto__=ia;ha=ja.a;break a}catch(a){}ha=!1}fa=ha?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+\" is not extensible\");return a}:null}var ka=fa;\nfunction E(a,b){a.prototype=ea(b.prototype);a.prototype.constructor=a;if(ka)ka(a,b);else for(var c in b)if(\"prototype\"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.na=b.prototype}function la(){this.l=!1;this.i=null;this.h=void 0;this.g=1;this.u=this.o=0;this.j=null}function ma(a){if(a.l)throw new TypeError(\"Generator is already running\");a.l=!0}la.prototype.s=function(a){this.h=a};\nfunction na(a,b){a.j={da:b,ea:!0};a.g=a.o||a.u}la.prototype.return=function(a){this.j={return:a};this.g=this.u};function G(a,b,c){a.g=c;return{value:b}}function oa(a){this.g=new la;this.h=a}function pa(a,b){ma(a.g);var c=a.g.i;if(c)return qa(a,\"return\"in c?c[\"return\"]:function(d){return{value:d,done:!0}},b,a.g.return);a.g.return(b);return H(a)}\nfunction qa(a,b,c,d){try{var e=b.call(a.g.i,c);if(!(e instanceof Object))throw new TypeError(\"Iterator result \"+e+\" is not an object\");if(!e.done)return a.g.l=!1,e;var g=e.value}catch(f){return a.g.i=null,na(a.g,f),H(a)}a.g.i=null;d.call(a.g,g);return H(a)}function H(a){for(;a.g.g;)try{var b=a.h(a.g);if(b)return a.g.l=!1,{value:b.value,done:!1}}catch(c){a.g.h=void 0,na(a.g,c)}a.g.l=!1;if(a.g.j){b=a.g.j;a.g.j=null;if(b.ea)throw b.da;return{value:b.return,done:!0}}return{value:void 0,done:!0}}\nfunction ra(a){this.next=function(b){ma(a.g);a.g.i?b=qa(a,a.g.i.next,b,a.g.s):(a.g.s(b),b=H(a));return b};this.throw=function(b){ma(a.g);a.g.i?b=qa(a,a.g.i[\"throw\"],b,a.g.s):(na(a.g,b),b=H(a));return b};this.return=function(b){return pa(a,b)};this[Symbol.iterator]=function(){return this}}function sa(a){function b(d){return a.next(d)}function c(d){return a.throw(d)}return new Promise(function(d,e){function g(f){f.done?d(f.value):Promise.resolve(f.value).then(b,c).then(g,e)}g(a.next())})}\nfunction J(a){return sa(new ra(new oa(a)))}\nB(\"Promise\",function(a){function b(f){this.h=0;this.i=void 0;this.g=[];this.s=!1;var h=this.j();try{f(h.resolve,h.reject)}catch(k){h.reject(k)}}function c(){this.g=null}function d(f){return f instanceof b?f:new b(function(h){h(f)})}if(a)return a;c.prototype.h=function(f){if(null==this.g){this.g=[];var h=this;this.i(function(){h.l()})}this.g.push(f)};var e=y.setTimeout;c.prototype.i=function(f){e(f,0)};c.prototype.l=function(){for(;this.g&&this.g.length;){var f=this.g;this.g=[];for(var h=0;h<f.length;++h){var k=\nf[h];f[h]=null;try{k()}catch(l){this.j(l)}}}this.g=null};c.prototype.j=function(f){this.i(function(){throw f;})};b.prototype.j=function(){function f(l){return function(m){k||(k=!0,l.call(h,m))}}var h=this,k=!1;return{resolve:f(this.D),reject:f(this.l)}};b.prototype.D=function(f){if(f===this)this.l(new TypeError(\"A Promise cannot resolve to itself\"));else if(f instanceof b)this.H(f);else{a:switch(typeof f){case \"object\":var h=null!=f;break a;case \"function\":h=!0;break a;default:h=!1}h?this.A(f):this.o(f)}};\nb.prototype.A=function(f){var h=void 0;try{h=f.then}catch(k){this.l(k);return}\"function\"==typeof h?this.I(h,f):this.o(f)};b.prototype.l=function(f){this.u(2,f)};b.prototype.o=function(f){this.u(1,f)};b.prototype.u=function(f,h){if(0!=this.h)throw Error(\"Cannot settle(\"+f+\", \"+h+\"): Promise already settled in state\"+this.h);this.h=f;this.i=h;2===this.h&&this.G();this.B()};b.prototype.G=function(){var f=this;e(function(){if(f.C()){var h=y.console;\"undefined\"!==typeof h&&h.error(f.i)}},1)};b.prototype.C=\nfunction(){if(this.s)return!1;var f=y.CustomEvent,h=y.Event,k=y.dispatchEvent;if(\"undefined\"===typeof k)return!0;\"function\"===typeof f?f=new f(\"unhandledrejection\",{cancelable:!0}):\"function\"===typeof h?f=new h(\"unhandledrejection\",{cancelable:!0}):(f=y.document.createEvent(\"CustomEvent\"),f.initCustomEvent(\"unhandledrejection\",!1,!0,f));f.promise=this;f.reason=this.i;return k(f)};b.prototype.B=function(){if(null!=this.g){for(var f=0;f<this.g.length;++f)g.h(this.g[f]);this.g=null}};var g=new c;b.prototype.H=\nfunction(f){var h=this.j();f.M(h.resolve,h.reject)};b.prototype.I=function(f,h){var k=this.j();try{f.call(h,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(f,h){function k(p,n){return\"function\"==typeof p?function(r){try{l(p(r))}catch(t){m(t)}}:n}var l,m,q=new b(function(p,n){l=p;m=n});this.M(k(f,l),k(h,m));return q};b.prototype.catch=function(f){return this.then(void 0,f)};b.prototype.M=function(f,h){function k(){switch(l.h){case 1:f(l.i);break;case 2:h(l.i);break;default:throw Error(\"Unexpected state: \"+\nl.h);}}var l=this;null==this.g?g.h(k):this.g.push(k);this.s=!0};b.resolve=d;b.reject=function(f){return new b(function(h,k){k(f)})};b.race=function(f){return new b(function(h,k){for(var l=C(f),m=l.next();!m.done;m=l.next())d(m.value).M(h,k)})};b.all=function(f){var h=C(f),k=h.next();return k.done?d([]):new b(function(l,m){function q(r){return function(t){p[r]=t;n--;0==n&&l(p)}}var p=[],n=0;do p.push(void 0),n++,d(k.value).M(q(p.length-1),m),k=h.next();while(!k.done)})};return b});\nfunction ta(a,b){a instanceof String&&(a+=\"\");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var g=c++;return{value:b(g,a[g]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e}var ua=\"function\"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};B(\"Object.assign\",function(a){return a||ua});\nB(\"Object.is\",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});B(\"Array.prototype.includes\",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var e=d.length;c=c||0;for(0>c&&(c=Math.max(c+e,0));c<e;c++){var g=d[c];if(g===b||Object.is(g,b))return!0}return!1}});\nB(\"String.prototype.includes\",function(a){return a?a:function(b,c){if(null==this)throw new TypeError(\"The 'this' value for String.prototype.includes must not be null or undefined\");if(b instanceof RegExp)throw new TypeError(\"First argument to String.prototype.includes must not be a regular expression\");return-1!==this.indexOf(b,c||0)}});B(\"Array.prototype.keys\",function(a){return a?a:function(){return ta(this,function(b){return b})}});var va=this||self;\nfunction K(a,b){a=a.split(\".\");var c=va;a[0]in c||\"undefined\"==typeof c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b};function L(){throw Error(\"Invalid UTF8\");}function wa(a,b){b=String.fromCharCode.apply(null,b);return null==a?b:a+b}var xa,ya=\"undefined\"!==typeof TextDecoder,za,Aa=\"undefined\"!==typeof TextEncoder;var Ba={},M=null;function Ca(a){var b;void 0===b&&(b=0);Da();b=Ba[b];for(var c=Array(Math.floor(a.length/3)),d=b[64]||\"\",e=0,g=0;e<a.length-2;e+=3){var f=a[e],h=a[e+1],k=a[e+2],l=b[f>>2];f=b[(f&3)<<4|h>>4];h=b[(h&15)<<2|k>>6];k=b[k&63];c[g++]=l+f+h+k}l=0;k=d;switch(a.length-e){case 2:l=a[e+1],k=b[(l&15)<<2]||d;case 1:a=a[e],c[g]=b[a>>2]+b[(a&3)<<4|l>>4]+k+d}return c.join(\"\")}\nfunction Ea(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):-1!=\"=.\".indexOf(a[b-1])&&(c=-1!=\"=.\".indexOf(a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;Fa(a,function(g){d[e++]=g});return e!==c?d.subarray(0,e):d}\nfunction Fa(a,b){function c(k){for(;d<a.length;){var l=a.charAt(d++),m=M[l];if(null!=m)return m;if(!/^[\\s\\xa0]*$/.test(l))throw Error(\"Unknown base64 encoding at char: \"+l);}return k}Da();for(var d=0;;){var e=c(-1),g=c(0),f=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|g>>4);64!=f&&(b(g<<4&240|f>>2),64!=h&&b(f<<6&192|h))}}\nfunction Da(){if(!M){M={};for(var a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),b=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],c=0;5>c;c++){var d=a.concat(b[c].split(\"\"));Ba[c]=d;for(var e=0;e<d.length;e++){var g=d[e];void 0===M[g]&&(M[g]=e)}}}};var Ga=\"function\"===typeof Uint8Array;function Ha(a){return Ga&&null!=a&&a instanceof Uint8Array}var Ia;function Ja(a){this.L=a;if(null!==a&&0===a.length)throw Error(\"ByteString should be constructed with non-empty values\");};var Ka=\"function\"===typeof Uint8Array.prototype.slice,N=0,O=0;\nfunction La(a,b){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer)return new Uint8Array(a);if(a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return Ea(a);if(a.constructor===Ja){if(!b&&(b=a.L)&&b.constructor===Uint8Array)return b;b=a.L;b=null==b||Ha(b)?b:\"string\"===typeof b?Ea(b):null;return(a=a.L=b)?new Uint8Array(a):Ia||(Ia=new Uint8Array(0))}if(a instanceof Uint8Array)return new Uint8Array(a.buffer,a.byteOffset,a.byteLength);throw Error(\"Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers\");\n};function Ma(a,b){return Error(\"Invalid wire type: \"+a+\" (at position \"+b+\")\")}function Na(){return Error(\"Failed to read varint, encoding is invalid.\")};function Oa(a,b){b=void 0===b?{}:b;b=void 0===b.v?!1:b.v;this.h=null;this.g=this.i=this.j=0;this.v=b;a&&Pa(this,a)}function Pa(a,b){a.h=La(b,a.v);a.j=0;a.i=a.h.length;a.g=a.j}Oa.prototype.reset=function(){this.g=this.j};function P(a){if(a.g>a.i)throw Error(\"Tried to read past the end of the data \"+a.g+\" > \"+a.i);}\nfunction Q(a){var b=a.h,c=b[a.g],d=c&127;if(128>c)return a.g+=1,P(a),d;c=b[a.g+1];d|=(c&127)<<7;if(128>c)return a.g+=2,P(a),d;c=b[a.g+2];d|=(c&127)<<14;if(128>c)return a.g+=3,P(a),d;c=b[a.g+3];d|=(c&127)<<21;if(128>c)return a.g+=4,P(a),d;c=b[a.g+4];a.g+=5;d|=(c&15)<<28;if(128>c)return P(a),d;if(128<=b[a.g++]&&128<=b[a.g++]&&128<=b[a.g++]&&128<=b[a.g++]&&128<=b[a.g++])throw Na();P(a);return d}var Qa=[];function Ra(){this.g=[]}Ra.prototype.length=function(){return this.g.length};Ra.prototype.end=function(){var a=this.g;this.g=[];return a};function S(a,b){for(;127<b;)a.g.push(b&127|128),b>>>=7;a.g.push(b)};function Sa(a){var b={},c=void 0===b.W?!1:b.W;this.l={v:void 0===b.v?!1:b.v};this.W=c;b=this.l;Qa.length?(c=Qa.pop(),b&&(c.v=b.v),a&&Pa(c,a),a=c):a=new Oa(a,b);this.g=a;this.j=this.g.g;this.h=this.i=-1}Sa.prototype.reset=function(){this.g.reset();this.j=this.g.g;this.h=this.i=-1};function Ta(a){var b=a.g;if(b.g==b.i)return!1;a.j=a.g.g;var c=Q(a.g)>>>0;b=c>>>3;c&=7;if(!(0<=c&&5>=c))throw Ma(c,a.j);if(1>b)throw Error(\"Invalid field number: \"+b+\" (at position \"+a.j+\")\");a.i=b;a.h=c;return!0}\nfunction Ua(a){switch(a.h){case 0:if(0!=a.h)Ua(a);else a:{a=a.g;for(var b=a.g,c=b+10;b<c;)if(0===(a.h[b++]&128)){a.g=b;P(a);break a}throw Na();}break;case 1:a=a.g;a.g+=8;P(a);break;case 2:2!=a.h?Ua(a):(b=Q(a.g)>>>0,a=a.g,a.g+=b,P(a));break;case 5:a=a.g;a.g+=4;P(a);break;case 3:b=a.i;do{if(!Ta(a))throw Error(\"Unmatched start-group tag: stream EOF\");if(4==a.h){if(a.i!=b)throw Error(\"Unmatched end-group tag\");break}Ua(a)}while(1);break;default:throw Ma(a.h,a.j);}}var Va=[];function Wa(){this.i=[];this.h=0;this.g=new Ra}function T(a,b){0!==b.length&&(a.i.push(b),a.h+=b.length)}function Xa(a,b){if(b=b.ba){T(a,a.g.end());for(var c=0;c<b.length;c++)T(a,b[c])}};var U=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol()?Symbol(void 0):void 0;function Ya(a,b){Object.isFrozen(a)||(U?a[U]|=b:void 0!==a.N?a.N|=b:Object.defineProperties(a,{N:{value:b,configurable:!0,writable:!0,enumerable:!1}}))}function Za(a){var b;U?b=a[U]:b=a.N;return null==b?0:b}function $a(a){Ya(a,1);return a}function ab(a){return Array.isArray(a)?!!(Za(a)&2):!1}function bb(a){if(!Array.isArray(a))throw Error(\"cannot mark non-array as immutable\");Ya(a,2)};function cb(a){return null!==a&&\"object\"===typeof a&&!Array.isArray(a)&&a.constructor===Object}var db=Object.freeze($a([]));function eb(a){if(ab(a.m))throw Error(\"Cannot mutate an immutable Message\");}var fb=\"undefined\"!=typeof Symbol&&\"undefined\"!=typeof Symbol.hasInstance;function gb(a){return{value:a,configurable:!1,writable:!1,enumerable:!1}};function V(a,b,c){return-1===b?null:b>=a.i?a.g?a.g[b]:void 0:(void 0===c?0:c)&&a.g&&(c=a.g[b],null!=c)?c:a.m[b+a.h]}function W(a,b,c,d){d=void 0===d?!1:d;eb(a);b<a.i&&!d?a.m[b+a.h]=c:(a.g||(a.g=a.m[a.i+a.h]={}))[b]=c}function hb(a,b,c,d){c=void 0===c?!0:c;d=void 0===d?!1:d;var e=V(a,b,d);null==e&&(e=db);if(ab(a.m))c&&(bb(e),Object.freeze(e));else if(e===db||ab(e))e=$a(e.slice()),W(a,b,e,d);return e}function X(a,b,c){a=V(a,b);a=null==a?a:+a;return null==a?void 0===c?0:c:a}\nfunction ib(a,b,c,d){a.j||(a.j={});var e=ab(a.m),g=a.j[c];if(!g){d=hb(a,c,!0,void 0===d?!1:d);g=[];e=e||ab(d);for(var f=0;f<d.length;f++)g[f]=new b(d[f]),e&&bb(g[f].m);e&&(bb(g),Object.freeze(g));a.j[c]=g}return g}function jb(a,b,c,d,e){var g=void 0===g?!1:g;eb(a);g=ib(a,c,b,g);c=d?d:new c;a=hb(a,b);void 0!=e?(g.splice(e,0,c),a.splice(e,0,c.m)):(g.push(c),a.push(c.m));return c}function kb(a,b){a=V(a,b);return null==a?0:a}function lb(a,b){a=V(a,b);return null==a?\"\":a};function mb(a){switch(typeof a){case \"number\":return isFinite(a)?a:String(a);case \"object\":if(a&&!Array.isArray(a)){if(Ha(a))return Ca(a);if(a instanceof Ja){var b=a.L;b=null==b||\"string\"===typeof b?b:Ga&&b instanceof Uint8Array?Ca(b):null;return(a.L=b)||\"\"}}}return a};function nb(a){var b=ob;b=void 0===b?pb:b;return qb(a,b)}function rb(a,b){if(null!=a){if(Array.isArray(a))a=qb(a,b);else if(cb(a)){var c={},d;for(d in a)c[d]=rb(a[d],b);a=c}else a=b(a);return a}}function qb(a,b){for(var c=a.slice(),d=0;d<c.length;d++)c[d]=rb(c[d],b);Array.isArray(a)&&Za(a)&1&&$a(c);return c}function ob(a){if(a&&\"object\"==typeof a&&a.toJSON)return a.toJSON();a=mb(a);return Array.isArray(a)?nb(a):a}function pb(a){return Ha(a)?new Uint8Array(a):a};function sb(a,b,c){a||(a=tb);tb=null;var d=this.constructor.h;a||(a=d?[d]:[]);this.h=(d?0:-1)-(this.constructor.g||0);this.j=void 0;this.m=a;a:{d=this.m.length;a=d-1;if(d&&(d=this.m[a],cb(d))){this.i=a-this.h;this.g=d;break a}void 0!==b&&-1<b?(this.i=Math.max(b,a+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE}if(c)for(b=0;b<c.length;b++)if(a=c[b],a<this.i)a+=this.h,(d=this.m[a])?Array.isArray(d)&&$a(d):this.m[a]=db;else{d=this.g||(this.g=this.m[this.i+this.h]={});var e=d[a];e?Array.isArray(e)&&\n$a(e):d[a]=db}}sb.prototype.toJSON=function(){return nb(this.m)};sb.prototype.toString=function(){return this.m.toString()};var tb;function ub(){sb.apply(this,arguments)}E(ub,sb);if(fb){var vb={};Object.defineProperties(ub,(vb[Symbol.hasInstance]=gb(function(){throw Error(\"Cannot perform instanceof checks for MutableMessage\");}),vb))};function wb(a,b,c){if(c){var d={},e;for(e in c){var g=c[e],f=g.ha;f||(d.F=g.la||g.fa.P,g.aa?(d.U=xb(g.aa),f=function(h){return function(k,l,m){return h.F(k,l,m,h.U)}}(d)):g.ca?(d.T=yb(g.X.g,g.ca),f=function(h){return function(k,l,m){return h.F(k,l,m,h.T)}}(d)):f=d.F,g.ha=f);f(b,a,g.X);d={F:d.F,U:d.U,T:d.T}}}Xa(b,a)}var zb=Symbol();function Ab(a,b,c){return a[zb]||(a[zb]=function(d,e){return b(d,e,c)})}\nfunction Bb(a){var b=a[zb];if(!b){var c=Cb(a);b=function(d,e){return Db(d,e,c)};a[zb]=b}return b}function Eb(a){var b=a.aa;if(b)return Bb(b);if(b=a.ka)return Ab(a.X.g,b,a.ca)}function Fb(a){var b=Eb(a),c=a.X,d=a.fa.O;return b?function(e,g){return d(e,g,c,b)}:function(e,g){return d(e,g,c)}}\nfunction Gb(a,b,c,d,e,g){a=a();var f=0;a.length&&\"number\"!==typeof a[0]&&(c(b,a[0]),f++);for(;f<a.length;){c=a[f++];for(var h=f+1;h<a.length&&\"number\"!==typeof a[h];)h++;var k=a[f++];h-=f;switch(h){case 0:d(b,c,k);break;case 1:d(b,c,k,a[f++]);break;case 2:e(b,c,k,a[f++],a[f++]);break;case 3:h=a[f++];var l=a[f++],m=a[f++];Array.isArray(m)?e(b,c,k,h,l,m):g(b,c,k,h,l,m);break;case 4:g(b,c,k,a[f++],a[f++],a[f++],a[f++]);break;default:throw Error(\"unexpected number of binary field arguments: \"+h);}}return b}\nvar Hb=Symbol();function xb(a){var b=a[Hb];if(!b){var c=Ib(a);b=function(d,e){return Jb(d,e,c)};a[Hb]=b}return b}function yb(a,b){var c=a[Hb];c||(c=function(d,e){return wb(d,e,b)},a[Hb]=c);return c}var Kb=Symbol();function Lb(a,b){a.push(b)}function Mb(a,b,c){a.push(b,c.P)}function Nb(a,b,c,d,e){var g=xb(e),f=c.P;a.push(b,function(h,k,l){return f(h,k,l,d,g)})}function Ob(a,b,c,d,e,g){var f=yb(d,g),h=c.P;a.push(b,function(k,l,m){return h(k,l,m,d,f)})}\nfunction Ib(a){var b=a[Kb];return b?b:Gb(a,a[Kb]=[],Lb,Mb,Nb,Ob)}var Pb=Symbol();function Qb(a,b){a[0]=b}function Rb(a,b,c,d){var e=c.O;a[b]=d?function(g,f,h){return e(g,f,h,d)}:e}function Sb(a,b,c,d,e,g){var f=c.O,h=Bb(e);a[b]=function(k,l,m){return f(k,l,m,d,h,g)}}function Tb(a,b,c,d,e,g,f){var h=c.O,k=Ab(d,e,g);a[b]=function(l,m,q){return h(l,m,q,d,k,f)}}function Cb(a){var b=a[Pb];return b?b:Gb(a,a[Pb]={},Qb,Rb,Sb,Tb)}\nfunction Db(a,b,c){for(;Ta(b)&&4!=b.h;){var d=b.i,e=c[d];if(!e){var g=c[0];g&&(g=g[d])&&(e=c[d]=Fb(g))}if(!e||!e(b,a,d))if(e=b,d=a,g=e.j,Ua(e),!e.W){var f=e.g.h;e=e.g.g;e=g===e?Ia||(Ia=new Uint8Array(0)):Ka?f.slice(g,e):new Uint8Array(f.subarray(g,e));(g=d.ba)?g.push(e):d.ba=[e]}}return a}\nfunction Ub(a,b,c){if(Va.length){var d=Va.pop();a&&(Pa(d.g,a),d.i=-1,d.h=-1);a=d}else a=new Sa(a);try{return Db(new b,a,Cb(c))}finally{b=a.g,b.h=null,b.j=0,b.i=0,b.g=0,b.v=!1,a.i=-1,a.h=-1,100>Va.length&&Va.push(a)}}function Jb(a,b,c){for(var d=c.length,e=1==d%2,g=e?1:0;g<d;g+=2)(0,c[g+1])(b,a,c[g]);wb(a,b,e?c[0]:void 0)}function Vb(a,b){var c=new Wa;Jb(a,c,Ib(b));T(c,c.g.end());a=new Uint8Array(c.h);b=c.i;for(var d=b.length,e=0,g=0;g<d;g++){var f=b[g];a.set(f,e);e+=f.length}c.i=[a];return a}\nfunction Wb(a,b){return{O:a,P:b}}\nvar Y=Wb(function(a,b,c){if(5!==a.h)return!1;a=a.g;var d=a.h[a.g];var e=a.h[a.g+1];var g=a.h[a.g+2],f=a.h[a.g+3];a.g+=4;P(a);e=(d<<0|e<<8|g<<16|f<<24)>>>0;a=2*(e>>31)+1;d=e>>>23&255;e&=8388607;W(b,c,255==d?e?NaN:Infinity*a:0==d?a*Math.pow(2,-149)*e:a*Math.pow(2,d-150)*(e+Math.pow(2,23)));return!0},function(a,b,c){b=V(b,c);if(null!=b){S(a.g,8*c+5);a=a.g;var d=b;d=(c=0>d?1:0)?-d:d;0===d?0<1/d?N=O=0:(O=0,N=2147483648):isNaN(d)?(O=0,N=2147483647):3.4028234663852886E38<d?(O=0,N=(c<<31|2139095040)>>>0):\n1.1754943508222875E-38>d?(d=Math.round(d/Math.pow(2,-149)),O=0,N=(c<<31|d)>>>0):(b=Math.floor(Math.log(d)/Math.LN2),d*=Math.pow(2,-b),d=Math.round(8388608*d),16777216<=d&&++b,O=0,N=(c<<31|b+127<<23|d&8388607)>>>0);c=N;a.g.push(c>>>0&255);a.g.push(c>>>8&255);a.g.push(c>>>16&255);a.g.push(c>>>24&255)}}),Xb=Wb(function(a,b,c){if(0!==a.h)return!1;for(var d=a.g,e=128,g=0,f=a=0;4>f&&128<=e;f++)e=d.h[d.g++],P(d),g|=(e&127)<<7*f;128<=e&&(e=d.h[d.g++],P(d),g|=(e&127)<<28,a|=(e&127)>>4);if(128<=e)for(f=0;5>\nf&&128<=e;f++)e=d.h[d.g++],P(d),a|=(e&127)<<7*f+3;if(128>e){d=g>>>0;e=a>>>0;if(a=e&2147483648)d=~d+1>>>0,e=~e>>>0,0==d&&(e=e+1>>>0);d=4294967296*e+(d>>>0)}else throw Na();W(b,c,a?-d:d);return!0},function(a,b,c){b=V(b,c);if(null!=b&&null!=b){S(a.g,8*c);a=a.g;var d=b;c=0>d;d=Math.abs(d);b=d>>>0;d=Math.floor((d-b)/4294967296);d>>>=0;c&&(d=~d>>>0,b=(~b>>>0)+1,4294967295<b&&(b=0,d++,4294967295<d&&(d=0)));N=b;O=d;c=N;for(b=O;0<b||127<c;)a.g.push(c&127|128),c=(c>>>7|b<<25)>>>0,b>>>=7;a.g.push(c)}}),Yb=Wb(function(a,\nb,c){if(0!==a.h)return!1;W(b,c,Q(a.g));return!0},function(a,b,c){b=V(b,c);if(null!=b&&null!=b)if(S(a.g,8*c),a=a.g,c=b,0<=c)S(a,c);else{for(b=0;9>b;b++)a.g.push(c&127|128),c>>=7;a.g.push(1)}}),Zb=Wb(function(a,b,c){if(2!==a.h)return!1;var d=Q(a.g)>>>0;a=a.g;var e=a.g;a.g+=d;P(a);a=a.h;var g;if(ya)(g=xa)||(g=xa=new TextDecoder(\"utf-8\",{fatal:!0})),g=g.decode(a.subarray(e,e+d));else{d=e+d;for(var f=[],h=null,k,l,m;e<d;)k=a[e++],128>k?f.push(k):224>k?e>=d?L():(l=a[e++],194>k||128!==(l&192)?(e--,L()):\nf.push((k&31)<<6|l&63)):240>k?e>=d-1?L():(l=a[e++],128!==(l&192)||224===k&&160>l||237===k&&160<=l||128!==((g=a[e++])&192)?(e--,L()):f.push((k&15)<<12|(l&63)<<6|g&63)):244>=k?e>=d-2?L():(l=a[e++],128!==(l&192)||0!==(k<<28)+(l-144)>>30||128!==((g=a[e++])&192)||128!==((m=a[e++])&192)?(e--,L()):(k=(k&7)<<18|(l&63)<<12|(g&63)<<6|m&63,k-=65536,f.push((k>>10&1023)+55296,(k&1023)+56320))):L(),8192<=f.length&&(h=wa(h,f),f.length=0);g=wa(h,f)}W(b,c,g);return!0},function(a,b,c){b=V(b,c);if(null!=b){var d=!1;\nd=void 0===d?!1:d;if(Aa){if(d&&/(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/.test(b))throw Error(\"Found an unpaired surrogate\");b=(za||(za=new TextEncoder)).encode(b)}else{for(var e=0,g=new Uint8Array(3*b.length),f=0;f<b.length;f++){var h=b.charCodeAt(f);if(128>h)g[e++]=h;else{if(2048>h)g[e++]=h>>6|192;else{if(55296<=h&&57343>=h){if(56319>=h&&f<b.length){var k=b.charCodeAt(++f);if(56320<=k&&57343>=k){h=1024*(h-55296)+k-56320+65536;g[e++]=h>>18|240;g[e++]=h>>12&63|128;\ng[e++]=h>>6&63|128;g[e++]=h&63|128;continue}else f--}if(d)throw Error(\"Found an unpaired surrogate\");h=65533}g[e++]=h>>12|224;g[e++]=h>>6&63|128}g[e++]=h&63|128}}b=g.subarray(0,e)}S(a.g,8*c+2);S(a.g,b.length);T(a,a.g.end());T(a,b)}}),$b=Wb(function(a,b,c,d,e){if(2!==a.h)return!1;b=jb(b,c,d);c=a.g.i;d=Q(a.g)>>>0;var g=a.g.g+d,f=g-c;0>=f&&(a.g.i=g,e(b,a),f=g-a.g.g);if(f)throw Error(\"Message parsing ended unexpectedly. Expected to read \"+(d+\" bytes, instead read \"+(d-f)+\" bytes, either the data ended unexpectedly or the message misreported its own length\"));\na.g.g=g;a.g.i=c;return!0},function(a,b,c,d,e){b=ib(b,d,c);if(null!=b)for(d=0;d<b.length;d++){var g=a;S(g.g,8*c+2);var f=g.g.end();T(g,f);f.push(g.h);g=f;e(b[d],a);f=a;var h=g.pop();for(h=f.h+f.g.length()-h;127<h;)g.push(h&127|128),h>>>=7,f.h++;g.push(h);f.h++}});function Z(){ub.apply(this,arguments)}E(Z,ub);if(fb){var ac={};Object.defineProperties(Z,(ac[Symbol.hasInstance]=gb(Object[Symbol.hasInstance]),ac))};function bc(a){Z.call(this,a)}E(bc,Z);function cc(){return[1,Yb,2,Y,3,Zb,4,Zb]};function dc(a){Z.call(this,a,-1,ec)}E(dc,Z);dc.prototype.addClassification=function(a,b){jb(this,1,bc,a,b);return this};function fc(){return[1,$b,bc,cc]}var ec=[1];function gc(a){Z.call(this,a)}E(gc,Z);function hc(){return[1,Y,2,Y,3,Y,4,Y,5,Y]};function ic(a){Z.call(this,a,-1,jc)}E(ic,Z);function kc(){return[1,$b,gc,hc]}var jc=[1];function lc(a){Z.call(this,a)}E(lc,Z);function mc(){return[1,Y,2,Y,3,Y,4,Y,5,Y,6,Xb]};var nc=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],oc=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,\n385],[385,384],[384,398],[398,362]],pc=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],qc=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],rc=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],sc=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],\n[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],tc=[].concat(D(nc),D(oc),D(pc),D(qc),D(rc),D(sc));function uc(a,b,c){c=a.createShader(0===c?a.VERTEX_SHADER:a.FRAGMENT_SHADER);a.shaderSource(c,b);a.compileShader(c);if(!a.getShaderParameter(c,a.COMPILE_STATUS))throw Error(\"Could not compile WebGL shader.\\n\\n\"+a.getShaderInfoLog(c));return c};function vc(a){return ib(a,bc,1).map(function(b){return{index:kb(b,1),ga:X(b,2),label:null!=V(b,3)?lb(b,3):void 0,displayName:null!=V(b,4)?lb(b,4):void 0}})};function wc(a){return{x:X(a,1),y:X(a,2),z:X(a,3),visibility:null!=V(a,4)?X(a,4):void 0}};function xc(a,b){this.h=a;this.g=b;this.l=0}\nfunction yc(a,b,c){zc(a,b);if(\"function\"===typeof a.g.canvas.transferToImageBitmap)return Promise.resolve(a.g.canvas.transferToImageBitmap());if(c)return Promise.resolve(a.g.canvas);if(\"function\"===typeof createImageBitmap)return createImageBitmap(a.g.canvas);void 0===a.i&&(a.i=document.createElement(\"canvas\"));return new Promise(function(d){a.i.height=a.g.canvas.height;a.i.width=a.g.canvas.width;a.i.getContext(\"2d\",{}).drawImage(a.g.canvas,0,0,a.g.canvas.width,a.g.canvas.height);d(a.i)})}\nfunction zc(a,b){var c=a.g;if(void 0===a.o){var d=uc(c,\"\\n  attribute vec2 aVertex;\\n  attribute vec2 aTex;\\n  varying vec2 vTex;\\n  void main(void) {\\n    gl_Position = vec4(aVertex, 0.0, 1.0);\\n    vTex = aTex;\\n  }\",0),e=uc(c,\"\\n  precision mediump float;\\n  varying vec2 vTex;\\n  uniform sampler2D sampler0;\\n  void main(){\\n    gl_FragColor = texture2D(sampler0, vTex);\\n  }\",1),g=c.createProgram();c.attachShader(g,d);c.attachShader(g,e);c.linkProgram(g);if(!c.getProgramParameter(g,c.LINK_STATUS))throw Error(\"Could not compile WebGL program.\\n\\n\"+\nc.getProgramInfoLog(g));d=a.o=g;c.useProgram(d);e=c.getUniformLocation(d,\"sampler0\");a.j={K:c.getAttribLocation(d,\"aVertex\"),J:c.getAttribLocation(d,\"aTex\"),ma:e};a.u=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.u);c.enableVertexAttribArray(a.j.K);c.vertexAttribPointer(a.j.K,2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);a.s=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.s);c.enableVertexAttribArray(a.j.J);c.vertexAttribPointer(a.j.J,\n2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);c.uniform1i(e,0)}d=a.j;c.useProgram(a.o);c.canvas.width=b.width;c.canvas.height=b.height;c.viewport(0,0,b.width,b.height);c.activeTexture(c.TEXTURE0);a.h.bindTexture2d(b.glName);c.enableVertexAttribArray(d.K);c.bindBuffer(c.ARRAY_BUFFER,a.u);c.vertexAttribPointer(d.K,2,c.FLOAT,!1,0,0);c.enableVertexAttribArray(d.J);c.bindBuffer(c.ARRAY_BUFFER,a.s);c.vertexAttribPointer(d.J,\n2,c.FLOAT,!1,0,0);c.bindFramebuffer(c.DRAW_FRAMEBUFFER?c.DRAW_FRAMEBUFFER:c.FRAMEBUFFER,null);c.clearColor(0,0,0,0);c.clear(c.COLOR_BUFFER_BIT);c.colorMask(!0,!0,!0,!0);c.drawArrays(c.TRIANGLE_FAN,0,4);c.disableVertexAttribArray(d.K);c.disableVertexAttribArray(d.J);c.bindBuffer(c.ARRAY_BUFFER,null);a.h.bindTexture2d(0)}function Ac(a){this.g=a};var Bc=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Cc(a,b){return b+a}function Dc(a,b){window[a]=b}function Ec(a){var b=document.createElement(\"script\");b.setAttribute(\"src\",a);b.setAttribute(\"crossorigin\",\"anonymous\");return new Promise(function(c){b.addEventListener(\"load\",function(){c()},!1);b.addEventListener(\"error\",function(){c()},!1);document.body.appendChild(b)})}\nfunction Fc(){return J(function(a){switch(a.g){case 1:return a.o=2,G(a,WebAssembly.instantiate(Bc),4);case 4:a.g=3;a.o=0;break;case 2:return a.o=0,a.j=null,a.return(!1);case 3:return a.return(!0)}})}\nfunction Gc(a){this.g=a;this.listeners={};this.j={};this.H={};this.o={};this.u={};this.I=this.s=this.Z=!0;this.D=Promise.resolve();this.Y=\"\";this.C={};this.locateFile=a&&a.locateFile||Cc;if(\"object\"===typeof window)var b=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf(\"/\"))+\"/\";else if(\"undefined\"!==typeof location)b=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf(\"/\"))+\"/\";else throw Error(\"solutions can only be loaded on a web page or in a web worker\");\nthis.$=b;if(a.options){b=C(Object.keys(a.options));for(var c=b.next();!c.done;c=b.next()){c=c.value;var d=a.options[c].default;void 0!==d&&(this.j[c]=\"function\"===typeof d?d():d)}}}x=Gc.prototype;x.close=function(){this.i&&this.i.delete();return Promise.resolve()};\nfunction Hc(a){var b,c,d,e,g,f,h,k,l,m,q;return J(function(p){switch(p.g){case 1:if(!a.Z)return p.return();b=void 0===a.g.files?[]:\"function\"===typeof a.g.files?a.g.files(a.j):a.g.files;return G(p,Fc(),2);case 2:c=p.h;if(\"object\"===typeof window)return Dc(\"createMediapipeSolutionsWasm\",{locateFile:a.locateFile}),Dc(\"createMediapipeSolutionsPackedAssets\",{locateFile:a.locateFile}),f=b.filter(function(n){return void 0!==n.data}),h=b.filter(function(n){return void 0===n.data}),k=Promise.all(f.map(function(n){var r=\nIc(a,n.url);if(void 0!==n.path){var t=n.path;r=r.then(function(w){a.overrideFile(t,w);return Promise.resolve(w)})}return r})),l=Promise.all(h.map(function(n){return void 0===n.simd||n.simd&&c||!n.simd&&!c?Ec(a.locateFile(n.url,a.$)):Promise.resolve()})).then(function(){var n,r,t;return J(function(w){if(1==w.g)return n=window.createMediapipeSolutionsWasm,r=window.createMediapipeSolutionsPackedAssets,t=a,G(w,n(r),2);t.h=w.h;w.g=0})}),m=function(){return J(function(n){a.g.graph&&a.g.graph.url?n=G(n,\nIc(a,a.g.graph.url),0):(n.g=0,n=void 0);return n})}(),G(p,Promise.all([l,k,m]),7);if(\"function\"!==typeof importScripts)throw Error(\"solutions can only be loaded on a web page or in a web worker\");d=b.filter(function(n){return void 0===n.simd||n.simd&&c||!n.simd&&!c}).map(function(n){return a.locateFile(n.url,a.$)});importScripts.apply(null,D(d));e=a;return G(p,createMediapipeSolutionsWasm(Module),6);case 6:e.h=p.h;a.l=new OffscreenCanvas(1,1);a.h.canvas=a.l;g=a.h.GL.createContext(a.l,{antialias:!1,\nalpha:!1,ja:\"undefined\"!==typeof WebGL2RenderingContext?2:1});a.h.GL.makeContextCurrent(g);p.g=4;break;case 7:a.l=document.createElement(\"canvas\");q=a.l.getContext(\"webgl2\",{});if(!q&&(q=a.l.getContext(\"webgl\",{}),!q))return alert(\"Failed to create WebGL canvas context when passing video frame.\"),p.return();a.G=q;a.h.canvas=a.l;a.h.createContext(a.l,!0,!0,{});case 4:a.i=new a.h.SolutionWasm,a.Z=!1,p.g=0}})}\nfunction Jc(a){var b,c,d,e,g,f,h,k;return J(function(l){if(1==l.g){if(a.g.graph&&a.g.graph.url&&a.Y===a.g.graph.url)return l.return();a.s=!0;if(!a.g.graph||!a.g.graph.url){l.g=2;return}a.Y=a.g.graph.url;return G(l,Ic(a,a.g.graph.url),3)}2!=l.g&&(b=l.h,a.i.loadGraph(b));c=C(Object.keys(a.C));for(d=c.next();!d.done;d=c.next())e=d.value,a.i.overrideFile(e,a.C[e]);a.C={};if(a.g.listeners)for(g=C(a.g.listeners),f=g.next();!f.done;f=g.next())h=f.value,Kc(a,h);k=a.j;a.j={};a.setOptions(k);l.g=0})}\nx.reset=function(){var a=this;return J(function(b){a.i&&(a.i.reset(),a.o={},a.u={});b.g=0})};\nx.setOptions=function(a,b){var c=this;if(b=b||this.g.options){for(var d=[],e=[],g={},f=C(Object.keys(a)),h=f.next();!h.done;g={R:g.R,S:g.S},h=f.next()){var k=h.value;k in this.j&&this.j[k]===a[k]||(this.j[k]=a[k],h=b[k],void 0!==h&&(h.onChange&&(g.R=h.onChange,g.S=a[k],d.push(function(l){return function(){var m;return J(function(q){if(1==q.g)return G(q,l.R(l.S),2);m=q.h;!0===m&&(c.s=!0);q.g=0})}}(g))),h.graphOptionXref&&(k={valueNumber:1===h.type?a[k]:0,valueBoolean:0===h.type?a[k]:!1,valueString:2===\nh.type?a[k]:\"\"},h=Object.assign(Object.assign(Object.assign({},{calculatorName:\"\",calculatorIndex:0}),h.graphOptionXref),k),e.push(h))))}if(0!==d.length||0!==e.length)this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(e),this.A=(void 0===this.A?[]:this.A).concat(d)}};\nfunction Lc(a){var b,c,d,e,g,f,h;return J(function(k){switch(k.g){case 1:if(!a.s)return k.return();if(!a.A){k.g=2;break}b=C(a.A);c=b.next();case 3:if(c.done){k.g=5;break}d=c.value;return G(k,d(),4);case 4:c=b.next();k.g=3;break;case 5:a.A=void 0;case 2:if(a.B){e=new a.h.GraphOptionChangeRequestList;g=C(a.B);for(f=g.next();!f.done;f=g.next())h=f.value,e.push_back(h);a.i.changeOptions(e);e.delete();a.B=void 0}a.s=!1;k.g=0}})}\nx.initialize=function(){var a=this;return J(function(b){return 1==b.g?G(b,Hc(a),2):3!=b.g?G(b,Jc(a),3):G(b,Lc(a),0)})};function Ic(a,b){var c,d;return J(function(e){if(b in a.H)return e.return(a.H[b]);c=a.locateFile(b,\"\");d=fetch(c).then(function(g){return g.arrayBuffer()});a.H[b]=d;return e.return(d)})}x.overrideFile=function(a,b){this.i?this.i.overrideFile(a,b):this.C[a]=b};x.clearOverriddenFiles=function(){this.C={};this.i&&this.i.clearOverriddenFiles()};\nx.send=function(a,b){var c=this,d,e,g,f,h,k,l,m,q;return J(function(p){switch(p.g){case 1:if(!c.g.inputs)return p.return();d=1E3*(void 0===b||null===b?performance.now():b);return G(p,c.D,2);case 2:return G(p,c.initialize(),3);case 3:e=new c.h.PacketDataList;g=C(Object.keys(a));for(f=g.next();!f.done;f=g.next())if(h=f.value,k=c.g.inputs[h]){a:{var n=a[h];switch(k.type){case \"video\":var r=c.o[k.stream];r||(r=new xc(c.h,c.G),c.o[k.stream]=r);0===r.l&&(r.l=r.h.createTexture());if(\"undefined\"!==typeof HTMLVideoElement&&\nn instanceof HTMLVideoElement){var t=n.videoWidth;var w=n.videoHeight}else\"undefined\"!==typeof HTMLImageElement&&n instanceof HTMLImageElement?(t=n.naturalWidth,w=n.naturalHeight):(t=n.width,w=n.height);w={glName:r.l,width:t,height:w};t=r.g;t.canvas.width=w.width;t.canvas.height=w.height;t.activeTexture(t.TEXTURE0);r.h.bindTexture2d(r.l);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n);r.h.bindTexture2d(0);r=w;break a;case \"detections\":r=c.o[k.stream];r||(r=new Ac(c.h),c.o[k.stream]=r);\nr.data||(r.data=new r.g.DetectionListData);r.data.reset(n.length);for(w=0;w<n.length;++w){t=n[w];var v=r.data,A=v.setBoundingBox,I=w;var F=t.boundingBox;var u=new lc;W(u,1,F.xCenter);W(u,2,F.yCenter);W(u,3,F.height);W(u,4,F.width);W(u,5,F.rotation);W(u,6,F.rectId);F=Vb(u,mc);A.call(v,I,F);if(t.landmarks)for(v=0;v<t.landmarks.length;++v){u=t.landmarks[v];var z=u.visibility?!0:!1;A=r.data;I=A.addNormalizedLandmark;F=w;u=Object.assign(Object.assign({},u),{visibility:z?u.visibility:0});z=new gc;W(z,1,\nu.x);W(z,2,u.y);W(z,3,u.z);u.visibility&&W(z,4,u.visibility);u=Vb(z,hc);I.call(A,F,u)}if(t.V)for(v=0;v<t.V.length;++v)A=r.data,I=A.addClassification,F=w,u=t.V[v],z=new bc,W(z,2,u.ga),u.index&&W(z,1,u.index),u.label&&W(z,3,u.label),u.displayName&&W(z,4,u.displayName),u=Vb(z,cc),I.call(A,F,u)}r=r.data;break a;default:r={}}}l=r;m=k.stream;switch(k.type){case \"video\":e.pushTexture2d(Object.assign(Object.assign({},l),{stream:m,timestamp:d}));break;case \"detections\":q=l;q.stream=m;q.timestamp=d;e.pushDetectionList(q);\nbreak;default:throw Error(\"Unknown input config type: '\"+k.type+\"'\");}}c.i.send(e);return G(p,c.D,4);case 4:e.delete(),p.g=0}})};\nfunction Mc(a,b,c){var d,e,g,f,h,k,l,m,q,p,n,r,t,w;return J(function(v){switch(v.g){case 1:if(!c)return v.return(b);d={};e=0;g=C(Object.keys(c));for(f=g.next();!f.done;f=g.next())h=f.value,k=c[h],\"string\"!==typeof k&&\"texture\"===k.type&&void 0!==b[k.stream]&&++e;1<e&&(a.I=!1);l=C(Object.keys(c));f=l.next();case 2:if(f.done){v.g=4;break}m=f.value;q=c[m];if(\"string\"===typeof q)return t=d,w=m,G(v,Nc(a,m,b[q]),14);p=b[q.stream];if(\"detection_list\"===q.type){if(p){var A=p.getRectList();for(var I=p.getLandmarksList(),\nF=p.getClassificationsList(),u=[],z=0;z<A.size();++z){var R=Ub(A.get(z),lc,mc);R={boundingBox:{xCenter:X(R,1),yCenter:X(R,2),height:X(R,3),width:X(R,4),rotation:X(R,5,0),rectId:kb(R,6)},landmarks:ib(Ub(I.get(z),ic,kc),gc,1).map(wc),V:vc(Ub(F.get(z),dc,fc))};u.push(R)}A=u}else A=[];d[m]=A;v.g=7;break}if(\"proto_list\"===q.type){if(p){A=Array(p.size());for(I=0;I<p.size();I++)A[I]=p.get(I);p.delete()}else A=[];d[m]=A;v.g=7;break}if(void 0===p){v.g=3;break}if(\"float_list\"===q.type){d[m]=p;v.g=7;break}if(\"proto\"===\nq.type){d[m]=p;v.g=7;break}if(\"texture\"!==q.type)throw Error(\"Unknown output config type: '\"+q.type+\"'\");n=a.u[m];n||(n=new xc(a.h,a.G),a.u[m]=n);return G(v,yc(n,p,a.I),13);case 13:r=v.h,d[m]=r;case 7:q.transform&&d[m]&&(d[m]=q.transform(d[m]));v.g=3;break;case 14:t[w]=v.h;case 3:f=l.next();v.g=2;break;case 4:return v.return(d)}})}\nfunction Nc(a,b,c){var d;return J(function(e){return\"number\"===typeof c||c instanceof Uint8Array||c instanceof a.h.Uint8BlobList?e.return(c):c instanceof a.h.Texture2dDataOut?(d=a.u[b],d||(d=new xc(a.h,a.G),a.u[b]=d),e.return(yc(d,c,a.I))):e.return(void 0)})}\nfunction Kc(a,b){for(var c=b.name||\"$\",d=[].concat(D(b.wants)),e=new a.h.StringList,g=C(b.wants),f=g.next();!f.done;f=g.next())e.push_back(f.value);g=a.h.PacketListener.implement({onResults:function(h){for(var k={},l=0;l<b.wants.length;++l)k[d[l]]=h.get(l);var m=a.listeners[c];m&&(a.D=Mc(a,k,b.outs).then(function(q){q=m(q);for(var p=0;p<b.wants.length;++p){var n=k[d[p]];\"object\"===typeof n&&n.hasOwnProperty&&n.hasOwnProperty(\"delete\")&&n.delete()}q&&(a.D=q)}))}});a.i.attachMultiListener(e,g);e.delete()}\nx.onResults=function(a,b){this.listeners[b||\"$\"]=a};K(\"Solution\",Gc);K(\"OptionType\",{BOOL:0,NUMBER:1,ia:2,0:\"BOOL\",1:\"NUMBER\",2:\"STRING\"});function Oc(a){var b=this;a=a||{};var c={url:\"face_detection_short.binarypb\"},d={type:1,graphOptionXref:{calculatorType:\"TensorsToDetectionsCalculator\",calculatorName:\"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator\",fieldName:\"min_score_thresh\"}};this.g=new Gc({locateFile:a.locateFile,files:[{data:!0,url:\"face_detection_short.binarypb\"},{data:!0,url:\"face_detection_short_range.tflite\"},{simd:!0,url:\"face_detection_solution_simd_wasm_bin.js\"},{simd:!1,url:\"face_detection_solution_wasm_bin.js\"}],\ngraph:c,listeners:[{wants:[\"detections\",\"image_transformed\"],outs:{image:\"image_transformed\",detections:{type:\"detection_list\",stream:\"detections\"}}}],inputs:{image:{type:\"video\",stream:\"input_frames_gpu\"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:\"InferenceCalculator\",fieldName:\"use_cpu_inference\"},default:\"object\"!==typeof window||void 0===window.navigator?!1:\"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod\".split(\";\").includes(navigator.platform)||navigator.userAgent.includes(\"Mac\")&&\n\"ontouchend\"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:\"GlScalerCalculator\",calculatorIndex:1,fieldName:\"flip_horizontal\"}},model:{type:0,onChange:function(e){var g,f,h,k,l,m;return J(function(q){switch(q.g){case 1:g=\"short\"===e?[\"face_detection_short_range.tflite\"]:[\"face_detection_full_range_sparse.tflite\"],f=C(g),h=f.next();case 2:if(h.done){q.g=4;break}k=h.value;l=\"third_party/mediapipe/modules/face_detection/\"+k;return G(q,Ic(b.g,k),5);case 5:m=q.h;b.g.overrideFile(l,m);\nh=f.next();q.g=2;break;case 4:return c.url=\"short\"===e?\"face_detection_short.binarypb\":\"face_detection_full.binarypb\",d.graphOptionXref.calculatorName=\"short\"===e?\"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator\":\"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator\",q.return(!0)}})}},minDetectionConfidence:d}})}x=Oc.prototype;x.close=function(){this.g.close();return Promise.resolve()};x.onResults=function(a){this.g.onResults(a)};\nx.initialize=function(){var a=this;return J(function(b){return G(b,a.g.initialize(),0)})};x.reset=function(){this.g.reset()};x.send=function(a){var b=this;return J(function(c){return G(c,b.g.send(a),0)})};x.setOptions=function(a){this.g.setOptions(a)};K(\"FaceDetection\",Oc);K(\"FACEDETECTION_LIPS\",nc);K(\"FACEDETECTION_LEFT_EYE\",oc);K(\"FACEDETECTION_LEFT_EYEBROW\",pc);K(\"FACEDETECTION_RIGHT_EYE\",qc);K(\"FACEDETECTION_RIGHT_EYEBROW\",rc);K(\"FACEDETECTION_FACE_OVAL\",sc);K(\"FACEDETECTION_CONTOURS\",tc);\nK(\"FACEDETECTION_TESSELATION\",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],\n[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],\n[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],\n[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],\n[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],\n[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,\n172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],\n[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,\n82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,\n83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],\n[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,\n233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],\n[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],\n[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,\n419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],\n[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],\n[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,\n369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],\n[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],\n[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,\n426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,\n262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],\n[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,\n444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],\n[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],\n[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,\n30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],\n[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,\n146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,\n28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,\n168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],\n[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],\n[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,\n36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],\n[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,\n232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,\n174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],\n[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],\n[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],\n[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,\n352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],\n[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,\n329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,\n396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],\n[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],\n[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,\n287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],\n[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,\n343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]);K(\"VERSION\",\"0.4.1646425229\");}).call(this);\n","(function(){/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n'use strict';function h(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}}var l=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(a==Array.prototype||a==Object.prototype)return a;a[c]=b.value;return a};\nfunction m(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global];for(var c=0;c<a.length;++c){var b=a[c];if(b&&b.Math==Math)return b}throw Error(\"Cannot find global object\");}var n=m(this);function p(a,c){if(c)a:{var b=n;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in b))break a;b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&l(b,a,{configurable:!0,writable:!0,value:c})}}\nfunction q(a){var c=\"undefined\"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return c?c.call(a):{next:h(a)}}var r=\"function\"==typeof Object.assign?Object.assign:function(a,c){for(var b=1;b<arguments.length;b++){var d=arguments[b];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};p(\"Object.assign\",function(a){return a||r});\np(\"Array.prototype.fill\",function(a){return a?a:function(c,b,d){var e=this.length||0;0>b&&(b=Math.max(0,e+b));if(null==d||d>e)d=e;d=Number(d);0>d&&(d=Math.max(0,e+d));for(b=Number(b||0);b<d;b++)this[b]=c;return this}});function t(a){return a?a:Array.prototype.fill}p(\"Int8Array.prototype.fill\",t);p(\"Uint8Array.prototype.fill\",t);p(\"Uint8ClampedArray.prototype.fill\",t);p(\"Int16Array.prototype.fill\",t);p(\"Uint16Array.prototype.fill\",t);p(\"Int32Array.prototype.fill\",t);\np(\"Uint32Array.prototype.fill\",t);p(\"Float32Array.prototype.fill\",t);p(\"Float64Array.prototype.fill\",t);var u=this||self;function v(a,c){a=a.split(\".\");var b=u;a[0]in b||\"undefined\"==typeof b.execScript||b.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===c?b[d]&&b[d]!==Object.prototype[d]?b=b[d]:b=b[d]={}:b[d]=c};var w={color:\"white\",lineWidth:4,radius:6,visibilityMin:.5};function x(a){a=a||{};return Object.assign({},w,{fillColor:a.color},a)}function y(a,c){return a instanceof Function?a(c):a}function z(a,c,b){return Math.max(Math.min(c,b),Math.min(Math.max(c,b),a))}v(\"clamp\",z);\nv(\"drawLandmarks\",function(a,c,b){if(c){b=x(b);a.save();var d=a.canvas,e=0;c=q(c);for(var f=c.next();!f.done;f=c.next())if(f=f.value,void 0!==f&&(void 0===f.visibility||f.visibility>b.visibilityMin)){a.fillStyle=y(b.fillColor,{index:e,from:f});a.strokeStyle=y(b.color,{index:e,from:f});a.lineWidth=y(b.lineWidth,{index:e,from:f});var g=new Path2D;g.arc(f.x*d.width,f.y*d.height,y(b.radius,{index:e,from:f}),0,2*Math.PI);a.fill(g);a.stroke(g);++e}a.restore()}});\nv(\"drawConnectors\",function(a,c,b,d){if(c&&b){d=x(d);a.save();var e=a.canvas,f=0;b=q(b);for(var g=b.next();!g.done;g=b.next()){var k=g.value;a.beginPath();g=c[k[0]];k=c[k[1]];g&&k&&(void 0===g.visibility||g.visibility>d.visibilityMin)&&(void 0===k.visibility||k.visibility>d.visibilityMin)&&(a.strokeStyle=y(d.color,{index:f,from:g,to:k}),a.lineWidth=y(d.lineWidth,{index:f,from:g,to:k}),a.moveTo(g.x*e.width,g.y*e.height),a.lineTo(k.x*e.width,k.y*e.height));++f;a.stroke()}a.restore()}});\nv(\"drawRectangle\",function(a,c,b){b=x(b);a.save();var d=a.canvas;a.beginPath();a.lineWidth=y(b.lineWidth,{});a.strokeStyle=y(b.color,{});a.fillStyle=y(b.fillColor,{});a.translate(c.xCenter*d.width,c.yCenter*d.height);a.rotate(c.rotation*Math.PI/180);a.rect(-c.width/2*d.width,-c.height/2*d.height,c.width*d.width,c.height*d.height);a.translate(-c.xCenter*d.width,-c.yCenter*d.height);a.stroke();a.fill();a.restore()});v(\"lerp\",function(a,c,b,d,e){return z(d*(1-(a-c)/(b-c))+e*(1-(b-a)/(b-c)),d,e)});}).call(this);\n","import { FaceDetection } from '@mediapipe/face_detection';\nimport * as drawingUtils from '@mediapipe/drawing_utils';\nimport pkg from '../../package.json';\nimport { CleanupFn } from '../webrtc';\n\nexport async function startFaceDetection(\n  videoEl: HTMLVideoElement,\n  canvasEl: HTMLCanvasElement\n): Promise<CleanupFn> {\n  const canvasCtx = canvasEl.getContext('2d')!;\n\n  const faceDetection = new FaceDetection({\n    locateFile: (file) =>\n      `https://cdn.jsdelivr.net/npm/@mediapipe/face_detection@${pkg.dependencies['@mediapipe/face_detection']}/${file}`,\n  });\n  faceDetection.setOptions({\n    model: 'short',\n    minDetectionConfidence: 0.5,\n  });\n  faceDetection.onResults((results: any) => {\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasEl.width, canvasEl.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasEl.width, canvasEl.height);\n    if (results.detections.length > 0) {\n      drawingUtils.drawRectangle(canvasCtx, results.detections[0].boundingBox, {\n        color: 'blue',\n        lineWidth: 2,\n        fillColor: '#00000000',\n      });\n      drawingUtils.drawLandmarks(canvasCtx, results.detections[0].landmarks, {\n        color: 'red',\n        radius: 3,\n      });\n    }\n    canvasCtx.restore();\n  });\n\n  const handleFrame = () =>\n    faceDetection\n      .send({ image: videoEl })\n      .then(() => videoEl.requestVideoFrameCallback(handleFrame));\n  videoEl.requestVideoFrameCallback(handleFrame);\n\n  const stopFaceDetection = async () => faceDetection.close(); // fyi, see: https://github.com/google/mediapipe/issues/3373\n  return stopFaceDetection;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n        parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","import adapter from 'webrtc-adapter';\n\nexport interface FetchedMediaDevices {\n  cameras: MediaDeviceInfo[];\n  microphones: MediaDeviceInfo[];\n  audioOutputs: MediaDeviceInfo[];\n}\n\nexport type CleanupFn = () => Promise<unknown>;\n\nexport const NO_OP_CLEANUP: CleanupFn = () => Promise.resolve();\n\nexport async function fetchInputDevices(): Promise<FetchedMediaDevices> {\n  try {\n    if (!(await hasVideoPermissions())) {\n      await askMediaPermission({ video: true });\n    }\n\n    if (!(await hasAudioPermissions())) {\n      await askMediaPermission({ audio: true });\n    }\n\n    const allDevices = (await navigator.mediaDevices.enumerateDevices()).filter((d) => !!d.label);\n    const cameras = allDevices.filter((d) => d.kind === 'videoinput');\n    const microphones = allDevices.filter((d) => d.kind === 'audioinput');\n    const audioOutputs = allDevices.filter((d) => d.kind === 'audiooutput');\n    return { cameras, microphones, audioOutputs };\n  } catch (error) {\n    console.error(`Error while fetching media devices.`, error);\n    return { cameras: [], microphones: [], audioOutputs: [] };\n  }\n}\n\nexport async function hasVideoPermissions(): Promise<boolean> {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((d) => d.kind === 'videoinput')\n    .some((d) => !!d.label);\n}\n\nexport async function hasAudioPermissions(): Promise<boolean> {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((d) => d.kind === 'audioinput')\n    .some((d) => !!d.label);\n}\n\nexport function getBrowserDetails() {\n  return adapter.browserDetails;\n}\n\nexport async function askMediaPermission(constraints: MediaStreamConstraints): Promise<void> {\n  try {\n    const videoStream = await navigator.mediaDevices.getUserMedia(constraints);\n    videoStream.getTracks().forEach((t) => t.stop());\n  } catch (error) {\n    console.error(`Error while requesting user media.`, constraints, error);\n  }\n}\n\nexport async function startVideoMirror(\n  deviceId: string,\n  videoEl: HTMLVideoElement\n): Promise<() => void> {\n  console.log('Starting video mirror for device:', deviceId);\n\n  const videoStream = await navigator.mediaDevices.getUserMedia({ video: { deviceId } });\n  videoEl.srcObject = videoStream;\n\n  try {\n    await videoEl.play();\n  } catch (error) {\n    console.error('Detected exception on playing video feed, ignoring.', error);\n  }\n\n  const stopVideoMirror = () => {\n    console.log('Killing video input track(s).');\n    (videoEl.srcObject as MediaStream).getTracks().forEach((t) => t.stop());\n    videoEl.srcObject = null;\n  };\n  return stopVideoMirror;\n}\n\nexport async function startRecording(\n  deviceId: string,\n  audioEl: HTMLAudioElement\n): Promise<CleanupFn> {\n  console.log('Initializing audio input recorder for device:', deviceId);\n\n  const audioStream = await navigator.mediaDevices.getUserMedia({ audio: { deviceId } });\n  const tracks = audioStream.getTracks();\n  if (tracks.length !== 1) {\n    console.error('Got invalid amount of audio tracks, cleaning them', tracks);\n    tracks.forEach((t) => t.stop());\n    throw new Error('Failed to start recorder.');\n  }\n\n  const [track] = tracks;\n  track.onended = () => {\n    if (recorder?.state === 'inactive') {\n      console.log('Track ended, recorder already inactive.');\n    } else {\n      console.log('Track ended, but recorder might still be active, so trying to stop it.');\n      recorder?.stop();\n    }\n  };\n\n  const killTrackAndTriggerEnding = () => {\n    console.log('Ending audio input track.');\n    track.stop();\n    track.dispatchEvent(new Event('ended'));\n  };\n\n  const foundSupportedMediaType = findMediaTypeForRecordings();\n  if (!foundSupportedMediaType) {\n    throw new Error('Failed to find supported media type (i.e., no supported MIME found).');\n  }\n\n  console.log('Recorder mime type:', foundSupportedMediaType);\n  const blobType = foundSupportedMediaType;\n  const recorderMimeType = foundSupportedMediaType;\n\n  const recorder = new MediaRecorder(audioStream, { mimeType: recorderMimeType });\n  recorder.ondataavailable = async (event) => {\n    console.log('Handling recorded audio for device', deviceId);\n\n    try {\n      if (!event.data.size) {\n        console.log('No data found for the recorder, just ignoring.');\n        return;\n      }\n\n      const blob = new Blob([event.data], { type: blobType });\n      const url = URL.createObjectURL(blob);\n      audioEl.src = url;\n    } catch (error) {\n      console.error('Failed to build blob and/or assign as audio source.', error);\n      audioEl.dispatchEvent(new Event('error', error));\n      return;\n    }\n\n    try {\n      console.log('Trying to auto play recorded audio.');\n      audioEl.muted = false;\n      audioEl.load();\n      await audioEl.play();\n      console.log('Recorder audio successfully auto played.');\n    } catch (error) {\n      console.warn('Could not auto play recorded audio chunk, relying on manual mode.', error);\n    }\n  };\n\n  console.log('Starting recorder.');\n  recorder.start();\n\n  const stopRecording = async () => {\n    try {\n      killTrackAndTriggerEnding();\n    } catch (error) {\n      console.error('Failed to kill audio input track and/or trigger its ending.');\n    }\n  };\n  return stopRecording;\n}\n\nfunction findMediaTypeForRecordings(): string | null {\n  // More complex discussion and approaches: https://stackoverflow.com/a/64656254\n  return (\n    [\n      'audio/mp3',\n      'audio/webm',\n      'audio/ogg',\n      'audio/x-matroska',\n      'video/mp4',\n      'video/webm',\n      'video/ogg',\n      'video/x-matroska',\n    ].find((mime) => MediaRecorder.isTypeSupported(mime)) || null\n  );\n}\n\n// adapter already made mutations globally, no need to use it directly,\n// but this might be useful for devs in the console\n(window as any).adapter = adapter;\n","import { startBackgrondBlur } from './advanced/background-blur.ts';\nimport { startBackgrondReplacement } from './advanced/background-replacement';\nimport { startFaceDetection } from './advanced/face-detection.ts';\nimport {\n  CleanupFn,\n  FetchedMediaDevices,\n  getBrowserDetails,\n  NO_OP_CLEANUP,\n  startRecording,\n  startVideoMirror,\n} from './webrtc';\n\nexport function assertDevicesStatus(devices: FetchedMediaDevices): boolean {\n  const errorEl = getOrDie('error');\n\n  if (!devices.cameras.length && !devices.microphones.length) {\n    errorEl.innerHTML = `\n      <strong>Failed to fetch cameras and microphones...</strong>\n      <br />\n      <br />\n      Please, make sure at least one media input device is connected\n      and your browser has <em>permanent permission</em> to access them.\n      <br />\n      <br />\n      Then refresh this page to try again.\n    `;\n    showBlock(errorEl);\n    return false;\n  }\n\n  return true;\n}\n\nexport function setupCameraSelector(cameras: MediaDeviceInfo[]): void {\n  if (!cameras.length) {\n    return;\n  }\n\n  const camerasEmptyEl = getOrDie('cameras-empty');\n  hideBlock(camerasEmptyEl);\n\n  const camerasSelectEl = getOrDie('cameras-select');\n  showBlock(camerasSelectEl);\n  camerasSelectEl.innerHTML = '';\n\n  const noOptionEl = document.createElement('option');\n  noOptionEl.innerText = 'Turned off';\n  noOptionEl.value = '';\n  camerasSelectEl.appendChild(noOptionEl);\n\n  cameras.forEach((camera) => {\n    const optionEl = document.createElement('option');\n    optionEl.innerText = camera.label;\n    if (camera.deviceId === 'default') {\n      optionEl.innerText += ' (Default)';\n    }\n    optionEl.title = camera.deviceId;\n    optionEl.value = camera.deviceId;\n    camerasSelectEl.appendChild(optionEl);\n  });\n\n  let currentCleanup = () => {};\n  const handleChange = async () => {\n    currentCleanup();\n\n    try {\n      currentCleanup = await activateSelectedCamera();\n    } catch (error) {\n      handleError();\n    }\n  };\n  camerasSelectEl.addEventListener('change', handleChange);\n\n  const videoEl = getOrDie('camera-demo-video') as HTMLAudioElement;\n  const errorEl = getOrDie('camera-demo-error');\n  const handleError = () => {\n    errorEl.innerText = 'Unexpected error on video feedback.';\n    showBlock(errorEl);\n  };\n  videoEl.onerror = handleError;\n  const handleOk = () => {\n    errorEl.innerText = '';\n    hideBlock(errorEl);\n  };\n  videoEl.onplay = handleOk;\n}\n\nexport function setupMicrophoneSelector(microphones: MediaDeviceInfo[]): void {\n  if (!microphones.length) {\n    return;\n  }\n\n  const microphonesEmptyEl = getOrDie('microphones-empty');\n  hideBlock(microphonesEmptyEl);\n\n  const microphonesSelectEl = getOrDie('microphones-select');\n  showBlock(microphonesSelectEl);\n  microphonesSelectEl.innerHTML = '';\n\n  const noOptionEl = document.createElement('option');\n  noOptionEl.innerText = 'Turned off';\n  noOptionEl.value = '';\n  microphonesSelectEl.appendChild(noOptionEl);\n\n  microphones.forEach((microphone) => {\n    const optionEl = document.createElement('option');\n    optionEl.innerText = microphone.label;\n    if (microphone.deviceId === 'default') {\n      optionEl.innerText += ' (Default)';\n    }\n    optionEl.title = microphone.deviceId;\n    optionEl.value = microphone.deviceId;\n    microphonesSelectEl.appendChild(optionEl);\n  });\n\n  const startRecordingBtn = getOrDie('microphone-demo-start-btn');\n  let handleStartRecordingClick = () => console.warn('Empty recorder click handler.');\n  startRecordingBtn.addEventListener('click', handleStartRecordingClick, { once: true });\n\n  const stopRecordingBtn = getOrDie('microphone-demo-stop-btn');\n  let handleStopRecordingClick = () => console.warn('Empty stop click handler.');\n  let stopRecording: CleanupFn = NO_OP_CLEANUP;\n  stopRecordingBtn.addEventListener('click', handleStopRecordingClick, { once: true });\n\n  const microphoneDemoSectionEl = getOrDie('microphone-demo-section');\n  const audioEl = getOrDie('microphone-demo-audio') as HTMLAudioElement;\n\n  const handleMicrophoneSelectorChange = (event: Event) => {\n    audioEl.muted = true;\n    hideBlock(audioEl);\n\n    const deviceId = (event.target as HTMLSelectElement).value;\n    const isActivating = !!deviceId;\n    if (isActivating) {\n      showBlock(microphoneDemoSectionEl);\n    } else {\n      hideBlock(microphoneDemoSectionEl);\n    }\n\n    startRecordingBtn.removeEventListener('click', handleStartRecordingClick);\n    showBlock(startRecordingBtn);\n    handleStartRecordingClick = async () => {\n      try {\n        audioEl.muted = true;\n        hideBlock(audioEl);\n        stopRecording = await startRecording(deviceId, audioEl);\n        hideBlock(startRecordingBtn);\n        showBlock(stopRecordingBtn);\n      } catch (error) {\n        audioEl.dispatchEvent(new Event('error', error));\n      }\n    };\n    startRecordingBtn.addEventListener('click', handleStartRecordingClick);\n\n    stopRecordingBtn.removeEventListener('click', handleStopRecordingClick);\n    hideBlock(stopRecordingBtn);\n    handleStopRecordingClick = async () => {\n      hideBlock(stopRecordingBtn);\n      showBlock(startRecordingBtn);\n      stopRecording();\n      stopRecording = NO_OP_CLEANUP;\n    };\n    stopRecordingBtn.addEventListener('click', handleStopRecordingClick);\n\n    const handleMicrophoneSelectorCleanup = () => {\n      handleStopRecordingClick();\n      microphonesSelectEl.removeEventListener('change', handleMicrophoneSelectorCleanup);\n    };\n    microphonesSelectEl.addEventListener('change', handleMicrophoneSelectorCleanup, { once: true });\n  };\n\n  microphonesSelectEl.addEventListener('change', handleMicrophoneSelectorChange);\n\n  const errorEl = getOrDie('microphone-demo-error');\n  const handleError = () => {\n    errorEl.innerText = 'Unexpected error on audio feedback.';\n    showBlock(errorEl);\n    hideBlock(audioEl);\n  };\n  audioEl.onerror = handleError;\n\n  const handleOk = () => {\n    errorEl.innerText = '';\n    hideBlock(errorEl);\n    showBlock(audioEl);\n  };\n  audioEl.oncanplay = handleOk;\n}\n\nexport function showAudioOutputsList(audioOutputs: MediaDeviceInfo[]): void {\n  if (!audioOutputs.length) {\n    return;\n  }\n\n  const audioOutputsEmptyEl = getOrDie('audio-outputs-empty');\n  hideBlock(audioOutputsEmptyEl);\n\n  const audioOutputsListEl = getOrDie('audio-outputs-list');\n  showBlock(audioOutputsListEl);\n  audioOutputsListEl.innerHTML = '';\n\n  audioOutputs.forEach((audioOutput) => {\n    const listItemEl = document.createElement('li');\n    listItemEl.innerText = audioOutput.label;\n    if (audioOutput.deviceId === 'default') {\n      listItemEl.innerText += ' (Default)';\n    }\n    listItemEl.title = audioOutput.deviceId;\n    audioOutputsListEl.appendChild(listItemEl);\n  });\n}\n\nexport function showBrowserDetails(): void {\n  const browserNameEl = getOrDie('browsername');\n  const browserVersionEl = getOrDie('browserversion');\n  const { browser, version } = getBrowserDetails();\n  browserNameEl.textContent = browser;\n  browserVersionEl.textContent = version ? version.toString() : 'unknown';\n}\n\nexport async function setupFaceDetection() {\n  const startBtn = getOrDie('facedetection-start-btn') as HTMLButtonElement;\n  const stopBtn = getOrDie('facedetection-stop-btn') as HTMLButtonElement;\n\n  startBtn.addEventListener('click', async () => {\n    const videoEl = getOrDie('camera-demo-video') as HTMLVideoElement;\n\n    const canvasEl = getOrDie('facedetection-canvas') as HTMLCanvasElement;\n    canvasEl.width = videoEl.clientWidth;\n    canvasEl.height = videoEl.clientHeight;\n\n    showBlock(canvasEl);\n    hideBlock(startBtn);\n    showBlock(stopBtn);\n\n    const stopFaceDetection = await startFaceDetection(videoEl, canvasEl);\n\n    const fullCleanup = () =>\n      stopFaceDetection().finally(() => {\n        hideBlock(canvasEl);\n        hideBlock(stopBtn);\n        showBlock(startBtn);\n      });\n    stopBtn.addEventListener('click', fullCleanup, { once: true });\n  });\n}\n\nexport async function setupBackgroundBlur() {\n  const startBtn = getOrDie('backgroundblur-start-btn') as HTMLButtonElement;\n  const stopBtn = getOrDie('backgroundblur-stop-btn') as HTMLButtonElement;\n\n  startBtn.addEventListener('click', async () => {\n    const sourceVideoEl = getOrDie('camera-demo-video') as HTMLVideoElement;\n\n    const targetVideoEl = getOrDie('backgroundblur-video') as HTMLVideoElement;\n    targetVideoEl.width = sourceVideoEl.clientWidth;\n    targetVideoEl.height = sourceVideoEl.clientHeight;\n\n    showBlock(targetVideoEl);\n    hideBlock(startBtn);\n    showBlock(stopBtn);\n\n    const stopFaceDetection = await startBackgrondBlur(sourceVideoEl, targetVideoEl);\n\n    const fullCleanup = () =>\n      stopFaceDetection().finally(() => {\n        hideBlock(targetVideoEl);\n        hideBlock(stopBtn);\n        showBlock(startBtn);\n      });\n    stopBtn.addEventListener('click', fullCleanup, { once: true });\n  });\n}\n\nexport async function setupBackgroundReplacement() {\n  const startBtn = getOrDie('backgroundreplacement-start-btn') as HTMLButtonElement;\n  const stopBtn = getOrDie('backgroundreplacement-stop-btn') as HTMLButtonElement;\n\n  startBtn.addEventListener('click', async () => {\n    const sourceVideoEl = getOrDie('camera-demo-video') as HTMLVideoElement;\n\n    const targetVideoEl = getOrDie('backgroundreplacement-video') as HTMLVideoElement;\n    targetVideoEl.width = sourceVideoEl.clientWidth;\n    targetVideoEl.height = sourceVideoEl.clientHeight;\n\n    showBlock(targetVideoEl);\n    hideBlock(startBtn);\n    showBlock(stopBtn);\n\n    const stopFaceDetection = await startBackgrondReplacement(sourceVideoEl, targetVideoEl);\n\n    const fullCleanup = () =>\n      stopFaceDetection().finally(() => {\n        hideBlock(targetVideoEl);\n        hideBlock(stopBtn);\n        showBlock(startBtn);\n      });\n    stopBtn.addEventListener('click', fullCleanup, { once: true });\n  });\n}\n\nasync function activateSelectedCamera(): Promise<() => void> {\n  const camerasSelectEl = getOrDie('cameras-select') as HTMLSelectElement;\n  const isTurningOn = !!camerasSelectEl.value;\n\n  const cameraDemoSectionEl = getOrDie('camera-demo-section') as HTMLDivElement;\n  if (isTurningOn) {\n    showBlock(cameraDemoSectionEl);\n  } else {\n    hideBlock(cameraDemoSectionEl);\n  }\n\n  if (!isTurningOn) {\n    return NO_OP_CLEANUP;\n  }\n\n  return await startVideoMirror(\n    camerasSelectEl.value,\n    getOrDie('camera-demo-video') as HTMLVideoElement\n  );\n}\n\nfunction showBlock(element: HTMLElement): void {\n  element.classList.add('d-block');\n  element.classList.remove('d-none');\n}\n\nfunction hideBlock(element: HTMLElement): void {\n  element.classList.remove('d-block');\n  element.classList.add('d-none');\n}\n\nfunction getOrDie(elementId: string): HTMLElement {\n  const element = document.getElementById(elementId);\n  if (!element) {\n    document.getElementsByTagName('main')[0].innerHTML =\n      '<p class=\"error-message\">Failed to load page for programming reasons.</p>';\n    throw new Error(`Unavailable DOM element: ${elementId}`);\n  }\n\n  return element;\n}\n","import {\n  assertDevicesStatus,\n  showAudioOutputsList,\n  setupCameraSelector,\n  setupMicrophoneSelector,\n  setupFaceDetection,\n  setupBackgroundBlur,\n  showBrowserDetails,\n  setupBackgroundReplacement,\n} from './ui';\nimport { fetchInputDevices } from './webrtc';\n\ndocument.addEventListener('DOMContentLoaded', async (): Promise<void> => {\n  const devices = await fetchInputDevices();\n  if (!assertDevicesStatus(devices)) {\n    return;\n  }\n\n  // basic\n  setupCameraSelector(devices.cameras);\n  setupMicrophoneSelector(devices.microphones);\n  showAudioOutputsList(devices.audioOutputs);\n\n  // advanced\n  showBrowserDetails();\n  setupFaceDetection();\n  setupBackgroundBlur();\n  setupBackgroundReplacement();\n});\n","import './styles.css';\nimport './main.ts';\n"]}